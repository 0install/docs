<?xml version='1.0' encoding='utf-8'?>
<html xmlns='http://www.w3.org/1999/xhtml'>

<h2>Introduction</h2>

<p>
From 2007-09-10 to 2007-10-6, we ran a survey on the 0install.net web-site to collect
feedback. This is the write-up! The raw data and the scripts used generate the charts
can be found in the <a href='2007/survey'>2007/survey</a> directory. The only edit was
to obscure an email address in one of the comments to avoid spam.
</p>

<p>
The survey was advertised in various places:
</p>

<ol>
<li>Respondent 1 is me.</li>
<li>Then I <a href='http://thread.gmane.org/gmane.comp.file-systems.zero-install.devel/1783'>announced it</a> on the Zero Install mailing list (2007-09-10), which
probably corresponds to the next five responses.</li>
<li>Then I <a href='http://rox.sourceforge.net/desktop/node/756'>posted an announcement</a> to the ROX web-site later the same day.</li>
<li>It then <a href='http://linuxfr.org/~MilkaJinka/25303.html'>appeared on linuxfr.org</a> on the 16th (which probably accounts
for French being the second most popular language).</li>
<li>I <a href='https://lists.linux-foundation.org/pipermail/packaging/2007-September/000502.html'>posted on the LSB packaging list</a> on the 14th Sep.</li>
<li>I <a href='http://lwn.net/Articles/249934/'>submitted it to lwn.net</a>, which made the announcement visible only to
subscribers for the first week (starting on the 20th), and then to everyone (from the 27th).</li>
<li>Finally, I <a href='http://thread.gmane.org/gmane.comp.desktop.xfce.user/17096'>posted on the Xfce user's list</a> on the 4th Oct.</li>
</ol>

<p>
In total, 199 people started filling in the survey, with 66 completing it. Only
the results from those who completed it are analysed here.
</p>

<p>
The survey had three sections: about the user, about using Zero Install and
an optional section on publishing software using Zero Install.
</p>

<toc level='h2'/>

<h2>About the respondents</h2>

<p>The survey starts with a few questions about the respondents
themselves (well, it's nice to start with some easy questions!):</p>

<h3>What is your native language?</h3>

<p>
  Quite a good range of languages here. Surprisingly, none of the respondents mentioned anything about better localisation support in their comments.
</p>

<p>
 <img style='padding-left: 282px' src='2007/survey/charts/What_is_your_native_language.png' width='466' height='342' alt='What is your native language?'/>
</p>

<h3>How old are you?</h3>

<p>
 <img style='padding-left: 261px' src='2007/survey/charts/How_old_are_you.png' width='486' height='162' alt='How old are you?'/>
</p>

<h3>Which platforms do you use?</h3>

<p>
This questions was just about the platforms that the respondents used, not just
those they used with Zero Install.
</p>

<p>
We all know Ubuntu is popular at the moment, but the other Linux flavours
aren't even close (Debian and Ubuntu were counted together, but I suspect most of the
users were using Ubuntu). I should have added a write-in field for Other; lots of
people aren't using any of the suggested options.
</p>

<p>
 <img style='padding-left: 177px' src='2007/survey/charts/Which_platforms_do_you_use.png' width='571' height='202' alt='Which platforms do you use?'/>
</p>

<h3>What architectures do you use?</h3>

<p>
We have a surprisingly varied set of architectures. I'm currently trying to get a project on the OpenSUSE build service for Zero Install, which
should allow us to build binaries for multiple architectures automatically. So far, <a href='http://thread.gmane.org/gmane.linux.suse.opensuse.buildservice/3331'>I haven't been able to attract the attention of an admin</a>, though. That would provide support for the two most popular architectures. If anyone has an automatic build system for other platforms, let us know. You should be
able to set it up to automatically download, compile and publish new versions using <a href='0compile.html'>0compile</a>.
</p>

<p>
 <img style='padding-left: 95px' src='2007/survey/charts/What_architectures_do_you_use.png' width='653' height='122' alt='What architectures do you use?'/>
</p>
<blockquote><p><strong>Others responses: </strong><q>Sparc</q>, <q>Sparc64</q>.</p></blockquote>

<h3>How did you hear about Zero Install?</h3>

<p>
Oops. I forgot to list <a href='http://www.pro-linux.de/'>pro-linux.de</a> as
an option. They've run lots of articles about Zero Install! <a href='Http://linuxfr.org/~MilkaJinka/25303.html'>linuxfr.org</a> linked
to the survey; lots of people arrived that way!
</p>

<p>
 <img style='padding-left: 211px' src='2007/survey/charts/How_did_you_hear_about_Zero_Install.png' width='537' height='122' alt='How did you hear about Zero Install?'/>
</p>
<blockquote><p><strong>Other comments: </strong><q>I wrote it</q>, <q>pro-linux.de</q>, <q>Comp.lang.ada</q>, <q>Mailing list</q>, <q>Lsb packaging list</q>, <q>Linuxfr.org</q>, <q>www.linuxfr.org</q>, <q>Linuxfr.org</q>, <q>Forum</q>, <q>http://linuxfr.org/~MilkaJinka/25303.html</q>, <q>Linuxfr.org</q>, <q>Linuxfr</q>, <q>LinuxFR.org</q>, <q>Linuxfr.org</q>, <q>Linuxfr.org</q>, <q>Google</q>, <q>StumbleUpon</q>, <q>Linuxfr</q>, <q>http://lwn.net/Articles/249934/</q>, <q>www.inkscape.org</q>, <q>lwn.net</q>, <q>LINUX USER Magzin</q>, <q>Autopackage project</q>, <q>lwn</q>, <q>lwn.net</q>, <q>lwn</q>, <q>Some people wrote about it on some web site, i think it was related to gobolinux</q>, <q>prolinux.de</q>.</p></blockquote>

<h2>Running programs with Zero Install</h2>

<h3>What operating systems / distributions do you use Zero Install with?</h3>

<p>
When it comes to actually using Zero Install, Ubuntu increases its lead over the others even further. I tried it once on a Windows machine but I had some weird DLL problems, but it
looks like someone managed to get it working (the other Windows vote corresponds to the <q>Would like</q> comment below).
</p>

<p>
 <img style='padding-left: 177px' src='2007/survey/charts/What_operating_systems___distributions_do_you_use_Zero_Install_with.png' width='695' height='202' alt='What operating systems / distributions do you use Zero Install with?'/>
</p>
<blockquote><p><strong>Other comments: </strong><q>Puppy</q>, <q>Gentoo</q>, <q>Archlinux</q>, <q>None</q>, <q>(B)LFS</q>, <q>Would like, can help with development</q>, <q>Gentoo</q>.</p></blockquote>
<h3>How have you used Zero Install so far?</h3>

<p>
Lots of the survey respondents haven't used it yet (only 39 / 66 had). I'd count <q>Contributed patches</q> as being a developer, though the Respondent didn't. It does bring up the
point that the core devel team is a bit small at the moment ;-)
</p>

<p>
 <img style='padding-left: 64px' src='2007/survey/charts/How_have_you_used_Zero_Install_so_far.png' width='684' height='102' alt='How have you used Zero Install so far?'/>
</p>
<blockquote><p><strong>Other comments: </strong><q>Contributed Patches</q>, <q>Can help with development for windows</q>.</p></blockquote>

<h3>What are the main programs you run using Zero Install, if any?</h3>

<p>
The various ROX applications dominate this list. Blender, Sonata, S.C.O.U.R.G.E, LyX, Inkspace and Saxm2s are the non-ROX ones mentioned. The feeds for the ROX apps and for Saxm2s are
maintained by their upstream authors, whereas most of the other programs are made available by 3rd-parties and are thus less official and/or less well maintained.
</p>

<blockquote><p><q>ROX-Filer and other ROX apps, blender, lyx</q>, <q>ROX, Sonata</q>, <q>ROX</q>, <q>Rox all</q>, <q>Almost everything ROX-related, and some other feeds.</q>, <q>ROX-Filer</q>, <q>ROX-Filer, ROX-Session</q>, <q>Archive, Wallpaper, Memo, Volume, SystemTrayN, Weather, AppFactory</q>, <q>Blender, S.C.O.U.R.G.E</q>, <q>All rox apps available via 0install</q>, <q>Rox Filler, but I would like to run all my desktop apps using it</q>, <q>ROX filer etc</q>, <q>ROX Desktop components</q>, <q>ROX Desktop</q>, <q>Rox-filer</q>, <q>None to date</q>, <q>None so far, just testing and development</q>, <q>Rox filer</q>, <q>Rox</q>, <q>Rox filer</q>, <q>I don't use it</q>, <q>ROX Filemanager</q>, <q>ROX-Filer, ROX-Session, ROX Configuration utilities</q>, <q>Inkscape</q>, <q>Rox desktop</q>, <q>Saxm2s</q>, <q>Not really any, i'd just want an easier integration with the Gobolinux distribution</q>.</p></blockquote>

<p>
Most of these programs are listed on the <a href='injector-feeds.html'>software
index page</a>. To get your program listed there, post to the <a
href='support.html'>mailing list</a> and <i>tell us your GPG fingerprint</i>!
</p>

<h3>As a user, how important are these goals to you?</h3>

<p>
Most of the time, the only reason for installing a program as root is so that a single copy can be shared between multiple users. Since Zero Install can support
<a href='sharing.html'>sharing between untrusted and unprivileged users</a>, users can install without needing root access.
</p>

<p>
I confess to being puzzled by the four people who find not being able to install without root access is an advantage to them as a user. "Don't care" is a reasonable answer here
(lots of people own their own machines), but plenty of people clearly do want to install things more easily on machines where they don't have root access.
</p>

<p>
 <img style='padding-left: 200px' src='2007/survey/charts/I_want_to_install_without_needing_root_access.png' width='547' height='142' alt='I want to install without needing root access'/>
</p>

<p>
Zero Install is decentralised; if you can publish a web-page, you can publish
software. Such programs are still first-class citizens, with automatic
dependency resolution and automatic updates. Lots of people want to use it to
install uncommon software. That's probably due to the large number of ROX users
(most distributions don't include most of ROX).
</p>

<p>
 <img style='padding-left: 200px' src='2007/survey/charts/I_want_to_install_less_common_software_that_isn&apos;t_in_my_distribution.png' width='677' height='142' alt='I want to install less common software that isn&apos;t in my distribution'/>
</p>

<p>
The large number of people who don't care about giving every program they install root access is a bit concerning, but understandable as in the past Linux hasn't been a target of
much malware. With Linux becoming more mainstream, that's likely to change over the next few years and we may see the current complacency start to disappear.
</p>

<p>
Then again, they may be on single user machines (where not installing as root
has fewer immediate benefits) and not believe that future sandboxing
technologies built on this will turn out to be workable.
My impression, though, has been that presenting Zero Install as "installation made easy"
is interesting to people, while if I talk about "better security" they quickly
lose interest.
</p>

<p>
 <img style='padding-left: 200px' src='2007/survey/charts/I_want_to_install_packages_without_giving_them_root_access.png' width='598' height='142' alt='I want to install packages without giving them root access'/>
</p>

<p>
Installing newer versions is popular. It's very frustrating when you hit a bug, only to have the developers say <q>Well, we fixed that 3 months ago!</q>, but you have to endure the
buggy behaviour for another three months waiting your distribution to put out a new release.
</p>

<p>
 <img style='padding-left: 200px' src='2007/survey/charts/I_want_to_install_newer_versions_than_in_my_distribution.png' width='559' height='142' alt='I want to install newer versions than in my distribution'/>
</p>

<p>
And finally, the most popular of all: avoiding conflicts. In Zero Install, there is no concept of "the" installed version of a library. While there is often only one version, shared by
many programs, Zero Install deals with conflicts automatically by installing multiple versions at once, as many as are needed.
</p>

<p>
 <img style='padding-left: 200px' src='2007/survey/charts/I_want_to_avoid_conflicts_between_packages.png' width='548' height='142' alt='I want to avoid conflicts between packages'/>
</p>

<h3>How do you integrate Zero Install with your (desktop) environment?</h3>

<p>
The core of Zero Install is 0launch, which takes a URI and runs the named program. Since that's not a very friendly interface the idea is to add short-cuts to your desktop
environment. Several such interfaces are provided, some more well developed than others:
</p>

<p>
 <img style='padding-left: 0px' src='2007/survey/charts/How_do_you_integrate_Zero_Install_with_your_(desktop)_environment.png' width='764' height='142' alt='How do you integrate Zero Install with your (desktop) environment?'/>
</p>
<blockquote><p><strong>Other comments: </strong><q>0launch in GNOME's automatically run programmes</q>.</p></blockquote>

<p>
The big surprise here is the extremely low number of people using it with Xfce, which has pretty good support built into its panel. Feedback in the past from those who have used it
has been very positive, but the feature seems little known.
</p>

<h3>How could Zero Install integrate better with your desktop environment?</h3>

<blockquote><p><q>Dragging to the ROX panel could add a launcher automatically.</q></p></blockquote>
<blockquote><p><q>It would be nice to be able to drag or copy+pase a feed from the web right on to one's desktop / panel / filer and have a launcher/.desktop file/ or whatever appear without any extra dialogs or applications to deal with.</q></p></blockquote>

<p>Good ideas. Just a question of getting the time to do it.</p>

<blockquote><p><q>MIME type handler for execution directly from web pages.</q></p></blockquote>

<p>Lots of people ask for this, but it's hard to do it securely. It's easy to make a link in a web page look innocuous, and letting any random web-page start the install
process seems risky. Firefox uses this method for installing extensions, and has ended up having to add a load of features to stop it from being abused (e.g. a count-down
timer after you click a link, as well as a white-list of allowed sites). Adding something to the right-click menu might work, though.</p>

<blockquote><p><q>That apps can be visible in menus (xdg?) without laucnhing Zero2Desktop each time</q></p></blockquote>

<p>I don't understand this one. Zero2Desktop's only action is to place launchers in menus using the XDG menu specification (which it does using the Portland Project's
<a href='http://0install.net/2007/3rd-party/XdgUtils.xml'>Xdg-Utils</a>).</p>

<blockquote><p><q>Have AddApp/Zero2Desktop install SendTo items. (Needs mime-types element in interfaces)</q></p></blockquote>

<p>MIME types are an area that should be improved, but we need to guard against the situation where applications fight over MIME types. One possibility would be to search the menus
when you ask to open something. e.g. <q>No application is registered to handle LyX files. However, the application LyX which you have placed in your Office menu can open it...</q></p>

<p>
Zero Install also allows another solution to this problem, though. Because programs can be installed on demand, you can associate a MIME type with an application without
installing the application at all. This makes it possible for distributions to set up handlers for all know types ahead of time. The
<a href='http://rox.sourceforge.net/2005/interfaces/ROX-Defaults'>ROX-Defaults package</a> does this already for some types; when a ROX user clicks on a .zip file for the first time, they are prompted
to download <a href='http://rox.sourceforge.net/desktop/Archive'>Archive</a>, for example.
</p>

<blockquote><p><q>I'm using E17 Desktop Shell at this moment and there is an Ibar which holds the launchers off apps, KDE4 and Gnome and thinking something similar (kicker or gdesklets with a mac like launcher), would be nice to have some kind of universal drag &amp; drop support for all this alternatives (I don't know if there is a standard for that). May be associations with mime types would be neat, but they can be provided by rox filler.</q></p></blockquote>

<blockquote><p><q>* Being the only install method for a whole distribution, or transparent
* Being able to share an installed software between users (MOST IMPORTANT)</q></p></blockquote>

<p>Sharing is <a href='sharing.html'>already supported</a>!</p>

<blockquote><p><q>With rox desktop</q></p></blockquote>
<blockquote><p><q>Integration with PackageKit ?</q></p></blockquote>
<blockquote><p><q>I was unaware of Zero2Desktop; I will have to check that out</q></p></blockquote>
<blockquote><p><q>It would be nice to have a SMALL control center that is uniform in functionality, be it on qt/kde or gtk/gnome</q></p></blockquote>

<p>Yes, Zero2Desktop is not only badly-named, but rather incomplete too. Hopefully someone will send patches...</p>

<blockquote><p><q>I use gnome and ubuntu, it could have lots more tooltips, demos, wizards, drag n drops, etc.
Well overall alot more intuitive for novice similar to windows or mac programs installations (next, next, finish..) :)</q></p></blockquote>


<h3>What security software do you use or want to use with Zero Install?</h3>

<p>
Surprisingly little interest in <a href='http://plash.beasts.org/'>Plash</a>,
even though this seems to offer the possibility of very good protection.
SELinux and AppArmor policies are set ahead of time by the admin, which means
that they tend to be rather general, yet at the same time overly limiting (e.g.
"Acroread can read /**/*.pdf files"), while Plash can be much more specific
(e.g. "Acroread can read any file I drag to it"). Of course, both static
admin-set policies and dynamic user-set policies can be used together.
</p>

<p>
On the other hand, the current release (1.18) of Plash is rather buggy (it just
hangs when used with Zero Install). Maybe interest will pick up when/if a new
version appears.
</p>

<p>
 <img style='padding-left: 167px' src='2007/survey/charts/What_security_software_do_you_use_or_want_to_use_with_Zero_Install.png' width='686' height='142' alt='What security software do you use or want to use with Zero Install?'/>
</p>
<blockquote><p><strong>Other comments: </strong><q>Don't know enough about these</q>, <q>UML</q>.</p></blockquote>

<p>
<a href='http://0install.net/2007/3rd-party/UserModeLinux.xml'>User-Mode-Linux</a> is itself available though Zero Install, and using it for sandboxing is a good idea.
For bonus points, set it up to let an (untrusted) process running under UML add packages to the host's cache, so that they are shared between all UML virtual machines.
</p>

<h3>Does Zero Install provide enough support for you to make trust decisions?</h3>

<p>
Because servers can be hacked and network traffic can be intercepted, every Zero Install feed comes with a GPG signature (encoded in an XML comment).
If Zero Install knows which key should have signed the feed, it can check that the update is genuine (sanctioned by the feed's author). Currently, the
first time it sees a key used for a domain, it pops up a confirmation box that looks a bit like this:
</p>

<p style='text-align: center'>
<img width="430" height="370" src="confirm-tal.png"
     alt="Confirming Thomas Leonard's GPG key" />
</p>

<p>
However, there are other ways to get this information. For example, the keys could be held in the DNS records for the site, with a chain to trust from the
root domain name servers, or the keys could be signed by a certificate authority. Another option is for the user's distribution to have an approved list of
keys, or some kind of distributed trust system ("3 of your friends trust this key", etc).
</p>

<p>
 <img style='padding-left: 0px' src='2007/survey/charts/Does_Zero_Install_provide_enough_support_for_you_to_make_trust_decisions.png' width='867' height='142' alt='Does Zero Install provide enough support for you to make trust decisions?'/>
</p>

<h3>How do you use Zero Install's sharing abilities?</h3>

<p>
 <img style='padding-left: 0px' src='2007/survey/charts/How_do_you_use_Zero_Install&apos;s_sharing_abilities.png' width='803' height='142' alt='How do you use Zero Install&apos;s sharing abilities?'/>
</p>
<blockquote><p><strong>Other comments: </strong><q>I am the only user, there is no sharing</q>, <q>Didn't notice sharing abilities...</q>.</p></blockquote>

<p>
We do mention the sharing on the <a href='index.html'>front page</a> (4th bullet), the <a href='matrix.html'>comparison page</a> and the <a href='sharing.html'>sharing</a> page.
People still seem to miss it, though. Good to see someone using it with VMs already.
</p>

<h3>Roll-back to previous versions</h3>

<p>
Zero Install feeds usually list all versions of a program, not just the latest one. You can choose a particular version by marking it as PREFERRED, or by marking 'better' versions
as BUGGY, like this:
</p>

<p style='text-align: center'>
<img width="623" height="363" src="screens/set-preferred.png" alt="Marking a version as preferred" />
</p>

<p>
 <img style='padding-left: 143px' src='2007/survey/charts/Roll-back_to_previous_versions.png' width='604' height='122' alt='Roll-back to previous versions'/>
</p>

<h3>Automatic update notification</h3>

<p>
By default, when you run a program, Zero Install checks how long it has been since it last
checked for updates. If it has been more than a month, it starts a check in the
background and, if updates turn out to be available, it notifies you using
D-BUS:
</p>

<p style='text-align: center'>
<img src="http://rox.sourceforge.net/images/blog/background-updates.png" alt="Updates ready to download for Inkscape" width='652' height='238'/>
</p>

<p>
 <img style='padding-left: 143px' src='2007/survey/charts/Automatic_update_notification.png' width='605' height='122' alt='Automatic update notification'/>
</p>

<h3>Compile packages from source</h3>

<p>
To compile a program from source, <a href='http://rox.sourceforge.net/desktop/node/360'>click on the Compile button</a>. This will use Zero Install to download the source
code and any build dependencies and then build it for you. Note that, since not every library is available through Zero Install, not all dependencies can be fetched automatically, hence
the large number of <a href='http://sourceforge.net/tracker/?atid=905152&amp;group_id=76468&amp;func=browse'>build failure reports</a> saying that libxml-dev is not installed,
and similar messages.
</p>

<p>
 <img style='padding-left: 143px' src='2007/survey/charts/Compile_packages_from_source.png' width='605' height='122' alt='Compile packages from source'/>
</p>

<h3>Modify packages (local feeds)</h3>

<p>
What's the point of software that you can't change? You can register your modified version of a program or library with Zero Install to have it considered
alongside the official versions (you'll probably want to mark it as PREFERRED, as explained above). This feature is also commonly used with SVN check-outs,
where you typically don't change the rating; if you don't update your check-out and a newer version is released, Zero Install will then automatically switch
to the new release. The alternative (before Zero Install) was to install the SVN version into /usr/local, where it would solve your problem for six months, and
then cause mysterious failures when it became out-of-date, long after you'd forgotten it!
</p>

<p>
 <img style='padding-left: 143px' src='2007/survey/charts/Modify_packages_(local_feeds).png' width='604' height='122' alt='Modify packages (local feeds)'/>
</p>

<h3>Third-party feeds</h3>

<p>
You can also publish a feed with your modified version(s) of a program and people can tell Zero Install to pull updates from your feed
(click on "Add Remote Feed").
</p>

<p>
 <img style='padding-left: 143px' src='2007/survey/charts/Third-party_feeds.png' width='604' height='122' alt='Third-party feeds'/>
</p>

<h3>Built-in bug reporting</h3>

<p>
Zero Install can generate and send a bug report for you, giving details of
exactly which versions you're using (of the program and all of its libraries),
error output from the program and details of your system.
</p>

<p>
One fun thing about these reports is that the paths include the cryptographic hash identifying the version. Since a program's author
typically keeps all versions of their own software around in the cache, you can usually just open the same path on your own machine and be looking
at exactly the same version of the file as the bug submitter.
</p>

<p>
 <img style='padding-left: 143px' src='2007/survey/charts/Built-in_bug_reporting.png' width='605' height='122' alt='Built-in bug reporting'/>
</p>

<p>
I think we may have discovered a UI problem... most people didn't know about
this! It does tell you about it in the Help text, though. You did all click
on the Help button, right? ;-)
</p>

<p style='text-align: center'>
<img src="screens/report-bug.png" alt="Choose Report a Bug... from the menu" width='500' height='248'/>
</p>

<h3>Which features would you like to see added / improved in the future?</h3>

<p>
The <a href='roadmap.html'>roadmap page</a> describes of load of planned features (if only I had more free time!). Better mirror support is my favourite too.
Note that RPM support is now in svn (thanks to a patch from Stephen Watson).
</p>

<p>
 <img style='padding-left: 21px' src='2007/survey/charts/Which_features_would_you_like_to_see_added___improved_in_the_future.png' width='727' height='142' alt='Which features would you like to see added / improved in the future?'/>
</p>
<blockquote><p><strong>Other comments: </strong><q>Support for packages with seperate archives for different languages</q>, <q>More portability and architecture support</q>, <q>Support for another OSes / architectures</q>, <q>Compiling packages from sources for different architectures</q>, <q>More packages.  Integration with apt</q>, <q>Integration with PackageKit</q>, <q>Shared cache</q>, <q>Integration with portage</q>.</p></blockquote>

<p>
If you want to add support for your favourite package manager, instructions are here:
<a href='http://article.gmane.org/gmane.comp.file-systems.zero-install.devel/1776'>adding a new Distribution</a>.
</p>


<h3>What is Zero Install's biggest weakness?</h3>

<p>
This is very encouraging: most people see adoption as the main challenge rather than technical limitations. You'll have to help me out here,
because unless lots of you ask your distributions for it to be installed by default, it's not likely to happen!
</p>

<p>
And don't forget to ask software authors to <a
href='injector-packagers.html'>provide a feed</a> for their programs. They need
to know people will use it before they go to the trouble of reading up about
it.
</p>

<p>
 <img style='padding-left: 0px' src='2007/survey/charts/What_is_Zero_Install&apos;s_biggest_weakness.png' width='776' height='182' alt='What is Zero Install&apos;s biggest weakness?'/>
</p>
<h3>Other comments</h3>

<blockquote><p><q>Feeds often have dependencies on things that are either not declared, or things which are unfeasable to package (i.e. libc5, for Firefox)</q></p></blockquote>

<p>
The distribution integration now lets you declare all dependencies, even those not in Zero Install. The trouble is, that will prevent it from working at all on distributions
which don't yet have integration. With 'recommended' (not 'required') dependencies, this would work though.
</p>

<blockquote><p><q>It does not address a clearly defined need</q></p></blockquote>

<p>This was (I think) a comment from the LSB list. I think this claim is hard to substantiate. The <a href='index.html'>front page</a> list fours key features, of which
all but the third are clearly features needed by many people. In fact, the major problem with presenting a "clearly defined need" is that Zero Install can solve so
many real problems! It took a lot of work to get the list down to just four points (if you list too many points, people get bored and confused).
</p>
<p>
Zero Install was, of course, originally created because of a need in the ROX project: the
need to be able to distribute and maintain a complete desktop environment
without first getting the approval of all the major Linux distributions (who
would obviously prefer to support only a small number of desktops, and ideally ones
which resemble the MS Windows environment familiar to most of their users).
</p>

<blockquote><p><q>Most of its functionality is redundant with package management: a package management which would spontaneously propose to install soft in user account instead of system wide would remove most of my interest for zero install as a potential user</q></p></blockquote>

<blockquote><p><q>I wanto to run it oon windows</q></p></blockquote>
<blockquote><p><q>Portage is good enough</q></p></blockquote>
<blockquote><p><q>Packages too often have dependencies on binary-only packages and so can't be compiled</q></p></blockquote>

<p>I need to make it easier to add support for <a href='0compile.html'>0compile</a> so we can reduce the number of binary-only packages.</p>

<blockquote><p><q>It should have built on an existing package system</q></p></blockquote>

<p>
Perhaps the most difficult kind of programming is to take an existing program
and change a fundamental implicit assumption. In this case, the major (i.e.
worth building on) existing systems all make the following assumption: <i>any
package being installed can be trusted absolutely</i>. This assumption doesn't
appear physically in the code; you can't just delete the line that says that
and see if it still builds. Also, the required design ends up being quite
different, so it's not clear there's much that could be kept from something
like APT. That said, there are smaller parts that can be copied (e.g. the
dependency resolution algorithm of Opium), code for handling mirrors and
restarting downloads.
</p>

<blockquote><p><q>Doesnt intergrate with distro packages</q></p></blockquote>

<p>
It does now! See <a href='distribution-integration.html'>Distribution Integration</a>.
</p>

<blockquote><p><q>The adoption must be more wide-spread. Its time that other distributions focus on Zero install as well. I think starting with smaller distributions like Gobolinux, adoption will be easier than with the biggies</q></p></blockquote>
<blockquote><p><q>It should be more easy to try 0install !! 0install needs its own TestDistribution. Just Download a small, fully prepared spinoff of one of the big ones and try it. Nowadays it is very easy to make such a thing.</q></p></blockquote>

<p>
Trying it is pretty easy already, with packages in most distributions ("apt-get install zeroinstall-injector", etc).
</p>

<h3>What do you think of the documentation?</h3>

<blockquote><p><q>Nice and well done.</q></p></blockquote>
<blockquote><p><q>Didn't read it, it was almost as intuitive as possible.</q></p></blockquote>
<blockquote><p><q>Very good. I've used everything I've wanted to with just a quick look at the documentation.</q></p></blockquote>
<blockquote><p><q>I found the website helpful and well designed.</q></p></blockquote>
<blockquote><p><q>It's good.</q></p></blockquote>
<blockquote><p><q>It's nice and complete</q></p></blockquote>
<blockquote><p><q>The documentation is pretty complete and up to date, it's good.</q></p></blockquote>
<blockquote><p><q>Good</q></p></blockquote>
<blockquote><p><q>It's fine, from the end user point of view. I have never probed like a developer but I have seen that the support on mailing list is good for people struggling with problems. About the previous question, more understanding and advocacy would let more packages and development, so is more about getting 0install in people minds.</q></p></blockquote>
<blockquote><p><q>Pretty good.</q></p></blockquote>
<blockquote><p><q>Have never had to read it</q></p></blockquote>
<blockquote><p><q>I think the documentation is great.</q></p></blockquote>
<blockquote><p><q>Ok</q></p></blockquote>
<blockquote><p><q>K</q></p></blockquote>
<blockquote><p><q>It's fine.</q></p></blockquote>
<blockquote><p><q>Haven't read it.</q></p></blockquote>
<blockquote><p><q>The website documentation is great. The step by step procedures for both using feeds and making your own were well described and straight forward to follow.</q></p></blockquote>
<blockquote><p><q>Its ok although i think it could be improved especially in regards to distributions. I have a short attention span :(</q></p></blockquote>
<blockquote><p><q>I think it's fair.</q></p></blockquote>

<p>
These three are probably correct, by I'll need more specific input before I can do anything about it:
</p>

<blockquote><p><q>Good. Needs more overview sections describing what rather than how; it's obviously all written by people who already know what it does.</q></p></blockquote>
<blockquote><p><q>Far too complex - assume I'm not stupid but also assume I know no Linux jargon.</q></p></blockquote>
<blockquote><p><q>Not precise enough. Hard to find the most basic things e.g. uninstall or finding out how to start Zero Install Cache.</q></p></blockquote>

<p>
Poor uninstall documentation might just be because there actually isn't a very good interface at present; you have to select each package to remove
manually, as explained in the <a href='injector-using.html'>the new user tutorial</a>. I'm not sure that "starting" the cache means. The cache is just
a directory.
</p>

<p>
And finally, the LSB list again (I think this was the only request for <i>less</i> advocacy!).
</p>

<blockquote><p><q>The advocacy is too pushy and is ignorant of many issues in package management and distribution building</q></p></blockquote>

<p>
If only there had been space in the form for the poster to list some of the
many issues. Alas, we must remain ignorant.
</p>

<h3>What did you find to be the most confusing or difficult aspect of Zero Install?</h3>

<blockquote><p><q>How to change the look of Rox.</q></p></blockquote>

<blockquote><p><q>The fact that it says "will automatically download dependancies" and then when I run the program I get a list saying "you are missing ......."</q></p></blockquote>

<blockquote><p><q>Listing dependencies of packages. i.e. I'm not sure libc5 should be a 0install package, and Ubuntu doesn't have a package, but some binary distributions (i.e. Firefox) are compiled against libc5. I can imagine many packages would fail without Python, or GTK, but it somehow seems like a lot of work packaging things like that that we assume are on most systems. I certainly don't want to be packaging a lot of dependencies just to get one package working. We could do with a core library of dependencies being packaged, and then everybody could link to them, and perhaps they could be included in 0publish as standard dependencies. Also, it may be possible to examine the current machine to see if the dependencies are already there - i.e. check if GTK exists at a specified version, if not download the 0install package, if it is we're alright. If 0install is to become more widely-adopted, we need more stringent dependency-listing because more people will be using it on more systems.</q></p></blockquote>

<p>
As noted above, this is now somewhat supported.
</p>

<blockquote><p><q>Wanting to go in an app's cache folder for whatever reason, and having to randomly try hex-string-named folders till I find the right one. I would like them to be called "PackageName - VersionNumber" etc. with the hexadecimal hash string stored in a file inside each directory.

Something like this:
implementations/ROX-Filer 1.1/2A32BDF834C.hash
And if someone installed a bunch of different packages with the same name and version, there could be a naming scheme like
ROX-Filer 1.1 (1)/2A32BDF834C.hash
ROX-Filer 1.1 (2)/325986BD6F3.hash
ROX-Filer 1.1 (3)/235B5DCD602.hash
Just an idea.</q></p></blockquote>

<p>
Here's the problem: you don't the know the exact cryptographic hash of the program you want, but you know it's in the cache somewhere. If only the directories had simpler names! The trouble is,
any user can put things in the cache. If you don't know the hash, you can't trust it! Making it easy to browse the cache "Hey look - there's the Gimp! Let's run it!" is therefore an anti-goal.
However, finding things isn't too tricky. If you run 0launch with the -v flag it'll tell you the full paths of everything it's running. If you want a machine readable version, run with
--get-selections. Here's a little script (which I call 0which) which takes a 0alias script and prints the full path of the main executable:
</p>

<pre>
#!/bin/sh
if [ "$#" != 1 ]; then
  echo usage: 0which SCRIPT
  exit 1
fi
URI=`0alias -r "$1"` || exit 1
0launch --wrapper=echo -- "$URI"
</pre>

<blockquote><p><q>It's somewhat difficult/confusing to uninstall applications.</q></p></blockquote>
<blockquote><p><q>That it's called "zero install" yet people are installing stuff. I have gotten used to the term now...</q></p></blockquote>
<blockquote><p><q>Tries to do too much things at once (one can create packages from deb packages, Autopackage, Kilk, sources, etc...). Tries to be a onze-size-fits-all app, which can lead to too much complexity.</q></p></blockquote>

<blockquote><p><q>Installing it, from the point of view of the end user, and the problem is not getting it by default on popular distros, but integrated to the web browsing experience of the casual unix desktop user. Something like a firefox plugin/extension would help a lot or the way that autopackage creates packages which install autopackage when it is not present. We need somekind of bootstraping for 0install, from the usual unix desktop experience, to the 0install experience and links to me between both experience can be made in the browser via extensions/plugins; in the mime types: you try to open a file that doesn't have the proper viewer and voilá, you get it via 0install; or in bundles: you get a 0install self contained bundle that, when is launched install 0install, and after that you can use to its full potential --even sharing dependencies (somekind of mix between the autopackage way and the 0install way)</q></p></blockquote>
<blockquote><p><q>Creating zero install packages that can share libraries.</q></p></blockquote>
<blockquote><p><q>Finding public keys used for packages</q></p></blockquote>

<p>
The keys themselves are in the same directory on the web-server, named after the key ID. 0launch should download them automatically, although authors sometimes forget to add them.
Let the packager know if so. 0publish-gui automatically exports the key, and <a href='feedlint.html'>FeedLint</a> checks that it's there.
</p>

<blockquote><p><q>It should have a GUI built in</q></p></blockquote>

<blockquote><p><q>To have 2 package manager...they should use something like package.provided from gentoo:
5.c. Non-Portage Maintained Software

Using Portage with Self-Maintained Software

In some cases you want to configure, install and maintain software yourself without having Portage automate the process for you, even though Portage can provide the software titles. Known cases are kernel sources and nvidia drivers. You can configure Portage so it knows that a certain pack stage is manually installed on your system. This process is called injecting and supported by Portage through the /etc/portage/profile/package.provided file.

For instance, if you want to inform Portage about gentoo-sources-2.6.11.6 which you've installed manually, add the following line to /etc/portage/profile/package.provided:

Code Listing 4: Example line for package.provided

sys-kernel/gentoo-sources-2.6.11.6</q></p></blockquote>

<p>
This is what local feeds are for.
</p>

<blockquote><p><q>Properly and easily setting up local feeds.</q></p></blockquote>

<blockquote><p><q>To get librarys or apps into the search path so that other applications could use it AND to get zero install apps to not use the librarys coming with the distribution.</q></p></blockquote>
<p>
The fact that Zero Install doesn't change the behaviour of distribution-provided packages is the reason the distributions allow the package in their repositories (they reject autopackage
mainly for this reason). You'd really have to know what you were doing if you wanted to make a distribution-installed binary depend on a Zero Install library!
</p>

<blockquote><p><q>While it is not particularly difficult to do the initial install the launcher, it is quite annoying to have to do it on every machine on which I use it. It would be helpful if distributions started shipping with it and made it part of the base install for at least desktop systems.</q></p></blockquote>

<blockquote><p><q>To integrate it nicely in my system.</q></p></blockquote>
<blockquote><p><q>It could be more easier or intuitive, like mac program installs or windows installers</q></p></blockquote>

<blockquote><p><q>Couldn't find out to uninstall. Found out later it was related root rights, which couldn't be modified wo. f***ing the 0 package up in ubuntu.</q></p></blockquote>

<blockquote><p><q>Once my ROX filer stopped working because it tried to download a newer version and there was a mismatch in zero-install versions. Stopped using it at that point.</q></p></blockquote>

<p>
I don't understand the last two; please <a href='support.html'>report bugs to the mailing list</a>!
</p>

<blockquote><p><q>Didnt find it really confusing... but it would be nice if Zero Install could rally more people behind its idea AND that it would be able to continue if main devs no longer have time to maintain (I see that Elektra registry project moves so slow for example, that makes me worried)</q></p></blockquote>

<p>
<a href='http://elektra.g4ii.com'>Elektra</a> worries me too. It's a shame, because they seem to be to only people
who've figured out what developers like me really want from a configuration
system: to depend only on an <i>interface</i>, not an <i>implementation</i>.
Meanwhile, the GNOME devs have discovered that people didn't like depending on
gconf and are busy replacing it with a dependency on D-BUS. Madness. gconf was
fine. D-BUS is fine. Flat files are fine. Just don't force us programmers to
choose!
</p>

<p>
Oops. Got distracted there. The good news it that, unlike some projects (like
Elektra), Zero Install does have real users. Even if no other project ever
adopted it, we'd still need it for ROX!
</p>

<p>We'll finish with the LSB list again:</p>

<blockquote><p><q>Lack of mandate</q></p></blockquote>

<h3>Any other comments?</h3>

<blockquote><p><q>In the "Which of these features do you use?" section, "No answer" corresponds to "I do not use this feature at the moment, but that doesn't mean I don't need it, or value its presence".</q></p></blockquote>
<blockquote><p><q>No infrastructure for managing packages, building for multiple architectures, dealing with portability issues, etc.</q></p></blockquote>
<blockquote><p><q>To the question "What is Zero Install's biggest weakness?", I want to add that more packages would be nice.</q></p></blockquote>
<blockquote><p><q>Great concept! I can't wait until distributions get rid of the creativity stifling easy-to-break centralized package management model and adopt zeroinstall's (at least for everything but the core of the OS)</q></p></blockquote>
<blockquote><p><q>0install is superb, thanks a lot for it. I will reinstall it in my Sabayon/Gentoo Linux on 64 bits and I will see how can it provide me for the packages I want, optimized for this architecture. Cheers</q></p></blockquote>
<blockquote><p><q>Keep it up!</q></p></blockquote>
<blockquote><p><q>I don't use Zero Install yet.</q></p></blockquote>
<blockquote><p><q>It should be very well implemented wiht the distribution...
also the package manager of the distribution should be able to use it like for instance portage that can use .deb or rpms</q></p></blockquote>
<blockquote><p><q>0 package needs to be updated to current distribution version e.g. Feisty or later Gutsy. It is not good enough with only Edgy updated package.</q></p></blockquote>

<p>Note that the Edgy package also works on Feisty and Gutsy (but not the other way around; Ubuntu packaging policy is to depend on the latest version other packages,
even if you don't actually need such new versions, so the official packages can't be used on older systems).</p>

<blockquote><p><q>Zero Install is usable but if I had the opportunity to get ROX Desktop as Debian packages in recent versions I would prefer the debs.</q></p></blockquote>
<blockquote><p><q>Keep up the great work! This is an excellent project.</q></p></blockquote>
<blockquote><p><q>Spread adoption guys!</q></p></blockquote>
<blockquote><p><q>Didn't ever try zero install</q></p></blockquote>
<blockquote><p><q>We need a test0install cd to download !
It should be a small system and should demonstrate the possibilities of 0install at its best !!!</q></p></blockquote>
<blockquote><p><q>Keep the good work :)</q></p></blockquote>


<h2>Publishing software using Zero Install</h2>

<p>
Nearly half of the responses were from people interested in providing software, although only a few of them are already doing this.
</p>

<p>
 <img style='padding-left: 275px' src='2007/survey/charts/Are_you_interested_in_using_Zero_Install_to_distribute_software.png' width='635' height='82' alt='Are you interested in using Zero Install to distribute software?'/>
</p>

<p>
 <img style='padding-left: 10px' src='2007/survey/charts/Do_you_use_Zero_Install_to_distribute_software.png' width='738' height='122' alt='Do you use Zero Install to distribute software?'/>
</p>

<h3>What format(s) do you use for your packages?</h3>

<p>
Zero Install supports a wide range of archive formats. This allows people to
publish their packages through Zero Install without having to change the
packages at all in many cases. All the different formats are treated as simple
archives (even Autopackages, where the executable prologue is skipped) since
running pre- or post-install scripts doesn't make sense with a side-effect-free
caching model of installation.
</p>

<p>
 <img style='padding-left: 133px' src='2007/survey/charts/What_format(s)_do_you_use_for_your_packages.png' width='615' height='142' alt='What format(s) do you use for your packages?'/>
</p>
<blockquote><p><strong>Other comments: </strong><q>Darcs repository</q>.</p></blockquote>

<p>
Downloading directly from an SCM system is an interesting possibility, especially with systems like
<a href='http://git.or.cz/'>GIT</a> which identify particular versions using
cryptographic hashes in the same way as Zero Install itself does.
</p>

<h3>Why do you (want to) use Zero Install?</h3>

<p>
As an upstream author, having to provide a different package for every system
is a lot of work. Every package is a new possible source of bugs and mistakes
(did you forget to add the LICENSE file to the Debian/etch package? did you forget
to strip debug symbols from the Fedora RPM?). Building and testing them yourself
requires you to manage lots of virtual build and test environments, while
getting others to do it for you means more risk (who are these people?) and packages
falling behind (why hasn't the Mandriva package been updated for 12 months?).
</p>

<p>
There are also various reasons why distributions might not be willing to include a
program. Typically, they feel the user base is too small for it to be worth their
while supporting the package. This is very reasonable, but they need to make sure
that people can still install such programs easily, or they will never grow! Zero Install
is especially important for developers of new libraries: no-one wants to use your library
until every distribution includes it, but no distribution will include it until programs
are using it!
</p>

<p>
 <img style='padding-left: 0px' src='2007/survey/charts/Why_do_you_(want_to)_use_Zero_Install.png' width='852' height='202' alt='Why do you (want to) use Zero Install?'/>
</p>
<blockquote><p><strong>Other comments: </strong><q>Because I like 0install, and I support it by packaging software. Also, one day (when 0install is a little more mature), I would like to be able to install an OS, copy/paste some feeds, and have my usual environment appear.</q>, <q>Provide user an easy way to install fresh release without waiting for distribution packages.</q>.</p></blockquote>

<h3>How do you find the developer documentation?</h3>

<p>
The word "find" confused a few people here. I'll try to be clearer in future!
</p>

<blockquote><p><q>Great. That's what I was referring to in the other section on documentation. I haven't used any end-user documentation as far as I recall. Maybe ages ago.</q>, <q>Google</q>, <q>Good.</q>, <q>A bit confusing</q>, <q>Ok</q>, <q>I have not read it yet. I will try at the end of this year</q>, <q>Havn't read it yet</q>, <q>Good.</q>, <q>From homepage</q>, <q>It was a link on the front page of the website. Well written, easy to follow</q>.</p></blockquote>

<h3>What did you find most difficult about providing software using Zero Install?</h3>

<blockquote><p><q>Creating binaries for different archs (x86_64, etc).</q></p></blockquote>
<blockquote><p><q>There are some dependencies that aren't already packaged, and I really don't feel like maintaining a package for some library I don't care about.</q></p></blockquote>
<blockquote><p><q>Lack of libraries already packaged</q></p></blockquote>
<blockquote><p><q>1) Dependencies. Most libraries aren't available for 0install, so I had to package them as well.
2) Programs that include hard-coded paths must be patched.</q></p></blockquote>
<blockquote><p><q>The software needs a bootstraping for normal desktop unix experience to 0install experience. Look my previous answer about this.</q></p></blockquote>
<blockquote><p><q>Building packages that use shared libraries.</q></p></blockquote>
<blockquote><p><q>Creating a package</q></p></blockquote>
<blockquote><p><q>Remembering to update the feed with the latest version, and making sure that my signing key is available on whatever dev machine I am using for the release at the time.</q></p></blockquote>

<h3>Which tools do you use to make packages?</h3>

<p>
<a href='injector-packagers.html'>0publish-gui</a> is a GTK application to help you publish a package. As long as your package is
relocatable (can be run from any directory), this is very simple and only takes a few minutes. <a href='0publish.html'>0publish</a> is a command-line tool, intended
for people writing scripts to update their feeds automatically. <a href='0compile.html'>0compile</a> downloads and builds a package from source. <a href='feedlint.html'>FeedLint</a>
checks your feeds for problems. All these programs are, of course, themselves available though Zero Install.
</p>

<p>
 <img style='padding-left: 174px' src='2007/survey/charts/Which_tools_do_you_use_to_make_packages.png' width='565' height='122' alt='Which tools do you use to make packages?'/>
</p>
<blockquote><p><strong>Other comments: </strong><q>Crazy shell scripts that fiddle XML manually, as seen in my Firefox packages.</q>, <q>I have not started the packaging</q>, <q>Manually, no other option at the time</q>, <q>Pacman on Arch</q>.</p></blockquote>

<h3>What improvements would you like to see in the future?</h3>

<p>
See the <a href='roadmap.html'>roadmap</a> for details of these features.
Next on my list of tools to write is a script for making releases directly from your SCM (i.e. something that will handle tagging the revision, building the packages, running the unit-tests, etc).
</p>

<p>
 <img style='padding-left: 0px' src='2007/survey/charts/What_improvements_would_you_like_to_see_in_the_future.png' width='931' height='122' alt='What improvements would you like to see in the future?'/>
</p>

<p>There were no "other comments" here.</p>

<h3>Would you be interested in commercial support?</h3>

<p>
As a hobby project, I don't get as much time to work on this as I'd like, but
if there's money available then I may be able to sort something out (I can't
promise anything). Write to the <a href='support.html'>mailing list</a> (or
email if it's confidential) and tell us what kind of support you need!
</p>

<p>
 <img style='padding-left: 275px' src='2007/survey/charts/Would_you_be_interested_in_commercial_support.png' width='501' height='102' alt='Would you be interested in commercial support?'/>
</p>
<h3>Any other comments?</h3><blockquote><p><q>"Integration with version control systems" is very interesting. Perhaps specify a "trunk" (rather than stable, or testing, or whatever), and the latest from .../proj/trunk is downloaded and executed (assuming it can be without compilation).</q></p></blockquote>
<blockquote><p><q>Would like a mechanism for distributing *source* and having it built on target machines, to avoid having to build and distribute binaries.</q></p></blockquote>

<p>
This can be done with <a href='0compile.html'>0compile</a>, but it's not possible to share between users in that case, because there's no way for one user to know they can
trust a binary compiled by a different user. A trusted build service (local or remote) could solve that problem.
</p>

<blockquote><p><q>I hope to see in a near future an entire distribution built onto the 0install platform!</q></p></blockquote>
<blockquote><p><q>More sofware</q></p></blockquote>
<blockquote><p><q>I am not a packager, yet this answer is mandatory, so i ticked "no".</q></p></blockquote>
<blockquote><p><q>Feel free to mail me if I  can help you with making the windows build, I use Python.
HIDDEN@gmail.com</q></p></blockquote>

<p>Emailed and awaiting response.</p>

<blockquote><p><q>Because i make ebuilds...but if zero install works across all distribution it's great</q></p></blockquote>
<blockquote><p><q>The real reasons I like to distribute software through zeroinstall:
* my user's shouldn't need root access or much experience with installing software from source
* zeroinstall checks for updates every so often for them, so I know that it is unlikely that many people will be using very out-of-date versions of my projects.

Again, keep up the excellent work!</q></p></blockquote>
</html>
