<?xml version='1.0' encoding='utf-8'?>
<html lang="en">

<h2>Roadmap</h2>

<p>
This document explains what we've done and where we're going with future versions.
</p>

<toc level='h3'/>

<h3>History</h3>

<p>
This is a quick overview of the major features added to Zero Install. It focusses on features available to feed authors, who want to know which features they can safely use while supporting users on older distributions.
</p>

<h4>2005 (versions 0.1 to 0.17)</h4>

<p>
  Zero Install was created in 2003 as a distributed network filesystem. In 2005, it was redesigned to the current "injector" system. Feed files from version 0.2
  can still be run using the current (0.51) version.
</p>

<h4>2006 (versions 0.18 to 0.24)</h4>

<p>
  Major features added in 2006:
</p>

<ul>
  <li>Support FTP downloads of archives.</li>
  <li>XML signatures (not just plain GPG).</li>
  <li>The &lt;recipe&gt; element allows combining multiple archives.</li>
  <li>Restrictions on suitable versions of dependencies, using the &lt;version&gt; element.</li>
  <li>Support for other secure hashes (not just sha1).</li>
  <li>Support for extracting from RPM, Debian, Autopackage, zip and Cabinet format archives.</li>
  <li>Compile a binary from source.</li>
  <li>More flexible version numbering (e.g. "1.2-post7").</li>
</ul>

<h4>2007 (version 0.25 to 0.31)</h4>

<ul>
<li>Extracting from .tar.lzma and .tar (uncompressed) archives.</li>
<li>Background checking for updates.</li>
<li>Automatic <a href='sharing.html'>secure sharing</a> of downloads.</li>
<li>Bug reporting.</li>
<li><a href='distribution-integration.html'>Native package manager integration</a> for Debian and RPM systems.</li>
<li>Implementation bindings (&lt;environment&gt; directly inside &lt;implementation&gt;).</li>
</ul>

<h4>2008 (version 0.32 to 0.37)</h4>

<ul>
  <li><a href='http://roscidus.com/0mirror/'>Mirrors for feeds</a>.</li>
  <li>Manage applications added to the menu (GNOME and KDE).</li>
  <li>Multi-arch support</li>
</ul>

<h4>2009 (versions 0.38 to 0.43)</h4>

<ul>
  <li>Support for Fink (Mac OS X).</li>
  <li>Easier compile-from-source ("Automatic" mode).</li>
  <li>Key information server.</li>
  <li>&lt;needs-terminal&gt; supported.</li>
  <li>Downloading feeds over HTTPS.</li>
</ul>

<h4>2010 (versions 0.44 onwards)</h4>

<ul>
  <li>Download progress bars in console mode.</li>
  <li>Canonical CPU type names.</li>
  <li>Gentoo, Slackware and FreeBSD Ports integration.</li>
  <li>Apple dmg-format archives can be used on Mac OS X.</li>
  <li>Specify distribution name in &lt;package-implementation&gt;.</li>
  <li>Support for multiple hash algorithms for a single implementation.</li>
  <li>Added 'local-path' attribute.</li>
  <li><a href='http://roscidus.com/desktop/node/954'>SAT solver</a> handles complex version requirements.</li>
  <li>Select implementations based on user's locale.</li>
  <li>Support for PackageKit (prompt the user to install distribution packages where necessary).</li>
  <li>Initial Windows support.</li>
  <li>The &lt;command&gt; element allows passing extra arguments.</li>
  <li>The &lt;runner&gt; element allows specifying the intepreter.</li>
</ul>


<h3>Possible future features</h3>
<dl>

<dt>Automatic cache cleaning</dt>
<dd>
0install can keep all versions of all libraries on disk at once. This is useful, but there should be a way
to clean out ones that aren't needed any more to free up disk space. Individual versions can be removed easily
enough via the cache explorer, but it should be more automatic, a bit like "apt-get autoclean" or deborphan.
In particular, we need a way to remove a version which was shared between multiple users safely (i.e. only remove it once no user
requires it).
</dd>

<dt>Mirrors for archives</dt>
<dd>If a download site is unavailable, switch to another mirror. Support sf.net mirror system, custom mirror
systems, coral cache, etc. May need to show sponsor logos during the download.
See also: <a href='http://www.metalinker.org/'> Metalink</a></dd>

<dt>Optional dependencies</dt>
<dd>
The feed file format only allows 'required' dependencies at present. It should also support the
'recommended' (optional and selected by default) and 'suggested' (optional and unselected by default)
relationships.
</dd>

<dt>Plug-ins</dt>
<dd>
It should be possible to add additional interfaces to a program's dependencies list. For example, you could add
the interface for a French dictionary to a word processor to let you spell-check French documents.
This would usually require some support from the application itself. A plug-in is a more general type of
optional dependency; one which isn't listed in the main feed file at all.
[ <a href='http://thread.gmane.org/gmane.comp.file-systems.zero-install.devel/1072/focus=1073'>Discussion</a> ]
</dd>

<dt>More meta-data</dt>
<dd>Mailing list address, release notes, where to send bug reports, etc.</dd>

<dt>Peer-to-peer downloads</dt>
<dd>The tricky bit about P2P is normally the free-text searching, but we already know the secure hash
of the manifest we want, and when we get it we have the hash of every file we need, so this should be easy!
The idea is that if someone on your local network has already downloaded a program, you can get it from them
automatically. See <a href='0share.html'>0share</a> for current experimental version.
</dd>

<dt>Binary patches</dt>
<dd>
We have the secure hash of the currently-cached versions, so we can check that they're unmodified. In that case,
we could just download a delta to the next version rather than getting everything again. 0publish should create
these deltas automatically. Rsync may also be an option for some sites.
[ <a href='http://thread.gmane.org/gmane.comp.file-systems.zero-install.devel/1214/focus=1214'>Discussion</a> ]
</dd>

<dt>Kiosk mode</dt>
<dd>The system administrator can restrict what software users can install using Zero Install (white-list interface
URIs or trusted public keys).</dd>

<dt>Third-party sign-off</dt>
<dd>A distribution can sign an upstream release ("Certified for use with SuSE 10.2", etc). Users can set a policy
to run only approved versions by default. Or, a third-party could provide additional input to the hints box
(we already provide the "Unreliable hints database", but a commercial organisation could offer
a real service).
</dd>

<dt>Sandboxing</dt>
<dd>
Provide better integration with sandboxing systems such as <a href='http://plash.beasts.org/'>Plash</a>. Sandboxed software must still
be able to run other programs through Zero Install, adding them to the cache as needed in a secure fashion. <a href='ebox.html'>EBox</a> shows how this integration can work.
[ <a href='http://thread.gmane.org/gmane.comp.file-systems.zero-install.devel/1285/focus=1285'>Discussion</a> ]
</dd>

</dl>

</html>
