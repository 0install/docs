<?xml version='1.0' encoding='utf-8'?>
<html>

<div style='max-width: 60em'>

<h2>Distribution integration</h2>

<p>
If you have already installed a package using your distribution's installer then Zero install can use
that instead of downloading a second copy using Zero Install. It can also use <a href='http://www.packagekit.org/'>PackageKit</a> to install them, if the user is authorised.
</p>

<p>
For example, here is what happens if you ask to run AbiWord when you already
have the <b>libenchant1</b> library it requires installed using <b>apt-get</b>:
</p>

<pre>$ <b>0launch http://0install.net/2006/autopackage/Abiword.xml</b></pre>

<p style='text-align: center'>
  <img src='screens/abiword-have-enchant.png' width='657' height='274' alt='Abiword with native libenchant'/>
</p>

<p>
If Abiword is itself installed as a distribution package, then the dialog is even simpler, and nothing needs to
be downloaded:
</p>

<p style='text-align: center'>
  <img src='screens/abiword-native.png' width='580' height='249' alt='Native Abiword'/>
</p>

<p>
Of couse, you are always free to change the selected version from the native package to a Zero Install
version. This will also happen autoamatically if your native version is incompatible with the required
version. For example, if you try this on a machine with a very old copy of libenchant1 then Zero Install
will download a newer version rather than using that one.
</p>

<p>
All software installed by Zero Install goes in the cache directory and does not conflict with
files installed by the native package manager. If PackageKit is used instead, the user is prompted to confirm, since installing distribution packages can affect the system as a whole. Note that PackageKit can only be used to install packages from the distribution's repository.
</p>

<h2>How it works</h2>

<p>
Two methods are available to integrate Zero Install packages with distribution ones:
</p>

<ul>
  <li>
  <p>
  A feed author can add a &lt;package-implementation package="name"/&gt; element to their feed. Zero Install
  will query your distribution's package manager to see if a package with this name is already installed. If so,
  that version will be considered as another candidate, with a stability rating
  of "packaged" (which is ranked between "stable" and "preferred").
  </p><p>
  Zero Install can get package information from Debian-based systems (including Ubuntu, etc), RPM-based systems,
  Slackware, Gentoo and FreeBSD Ports at present. Adding support for extra packaging systems is
  quite easy (see <a href='python-api/html/zeroinstall.injector.distro-module.html'>distro.py</a>).
  </p>

  <p>
  Since different distributions use different names for the same package, you can specify which
  distribution(s) an element applies to like this (some RPM-based distributions use "pkgconfig", while
  other RPM systems use "pkg-config", which is also the name used by Debian):
  </p>

  <pre>
  &lt;package-implementation distributions="RPM" package="pkgconfig"/>
  &lt;package-implementation distributions="RPM Debian" package="pkg-config"/>
  &lt;package-implementation distributions="Gentoo" package="dev-util/pkgconfig"/></pre>
  </li>

  <li><p>A distribution package can install a file named <b>/usr/share/0install.net/native_feeds/INTERFACE</b>.
  This is automatically used as an additional feed for INTERFACE (replace "/" characters in the package's
  interface URI with "#" characters).
  </p>
  
  <p>This is useful if the package installs the program as a self-contained
  directory somewhere. i.e. the installed package has the same format as the Zero Install package. If the
  package already contains a local feed file, you can just symlink to it directly.</p></li>

</ul>

</div>

</html>
