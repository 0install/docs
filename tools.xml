<?xml version='1.0' encoding='utf-8'?>
<html>

<h2>Tools</h2>

<p>
 This section contains various utility programs that make using Zero Install easier.
</p>

<toc level='h3'/>

<h3>Publishing and updating feeds</h3>

<dl>
 <dt><a href='http://gfxmonk.net/dist/0install/0downstream.xml'>0publish</a></dt>
 <dd>
   <b>0downstream</b> can be used to automatically create and update feed files
   for an existing open source project page on a site like github, pypi or rubygems.org.
 </dd>

 <dt><a href='0publish.html'>0publish</a></dt>
 <dd>
  <b>0publish</b> edits feed files in place. It loads the file, transforms
  it in some way (such as setting the release date, or adding a new
  implementation) and then writes it back out again. If the input file was
  signed, it will resign it when saving with the same key by default. You can
  also use it to add a signature, or to change the signing key. It is particularly
  useful in release scripts.
 </dd>

 <dt><a href='0release.html'>0release</a></dt>
 <dd>
<b>0release</b> can be used to make new releases of your software. It handles details such as setting the version
number and release date, tagging the release in your version control system and updating your Zero Install feed.
 </dd>

 <dt><a href='http://gfxmonk.net/dist/0install/mkzero.xml'>mkzero</a></dt>
 <dd>
   <b>mkzero</b> is a light-weight alternative to 0release. It doesn't support version control integration, tagging, or local feeds. It is useful for
   quickly publishing simple packages.
 </dd>

 <dt><a href='pkg2zero.html'>pkg2zero</a></dt>
 <dd>
<b>pkg2zero</b> publishes a Debian or RPM package in a Zero Install feed.
 </dd>
</dl>

<h3>Compiling</h3>

<dl>
 <dt><a href='0compile.html'>0compile</a></dt>
 <dd>
  <b>0compile</b> creates binaries from source code, either for your own use or ready
for publishing on the web through Zero Install. It can use Zero Install to
download any build dependencies (compilers, header files, build tools, etc).
This is useful if there is no binary for your platform, or if you wish to
modify the program in some way.
 </dd>

 <dt><a href='make-headers.html'>Make-headers</a></dt>
 <dd>
<b>Make-headers</b> is an extremely simple script for creating -dev packages (packages containing only header files) from ordinary source releases.
 </dd>
</dl>

<h3>Testing</h3>

<dl>
 <dt><a href='0test.html'>0test</a></dt>
 <dd>
<b>0test</b> runs the self-tests for a given program with various version combinations.
 </dd>

 <dt><a href='feedlint.html'>FeedLint</a></dt>
 <dd>
If you maintain a number of feeds, each with several versions of your programs, how do you
know that all the download links are still OK? Run <b>FeedLint</b> on your feeds from time-to-time
to check.
 </dd>

</dl>

<h3>Sharing</h3>

<dl>
 <dt><a href='0export.html'>0export</a></dt>
 <dd>
<b>0export</b> creates a self-extracting installer for a given program, for
distribution on CDs, etc.
 </dd>

 <dt><a href='0mirror.html'>0mirror</a></dt>
 <dd>
<b>0mirror</b> keeps an archive of Zero Install feeds and GnuPG keys and exports them
for publishing on a web-server.
 </dd>

 <dt><a href='0share.html'>0share</a></dt>
 <dd>
<b>0share</b> allows peer-to-peer sharing of Zero Install packages.
 </dd>
</dl>


<h3>Security</h3>

<dl>
 <dt><a href='ebox.html'>ebox</a></dt>
 <dd>
<b>ebox</b> proof-of-concept sandboxing system.
 </dd>
</dl>

</html>
