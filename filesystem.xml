<?xml version='1.0' encoding='utf-8'?>
<html xmlns='http://www.w3.org/1999/xhtml'>

<h2>News and current status</h2>
<ul>
<li><a href="http://freshmeat.net/branches/39759/">Software release announcements</a></li>
<li><a href="support.html">Mailing list</a></li>
<li><a href="http://sourceforge.net/pm/?group_id=76468">Task list</a></li>
<li><a href="http://sourceforge.net/tracker/?group_id=76468&amp;atid=547191">Bug tracker</a></li>
<li><a href="http://rox.sourceforge.net/phpwiki/index.php/ZeroInstallSites">List of supporting sites</a> (hosted on the ROX Wiki, but not ROX-specific)</li>
</ul>

<h2>Introduction</h2>

<p class='q'>What is it?</p>

<p>
The Zero Install system makes software installation not merely
easy, but unnecessary. Users run their applications directly from the
Internet from the software author's pages. Caching makes this as fast
as running a normal application after the first time, and allows
off-line use.
</p>

<div class='stop'>
<h3>STOP!</h3>
<p>
Please at least read to the bottom of this page before flaming
about how this is like Windows Update/thin-client computing, reinvents
APT/autoapt, is slow/inefficient/insecure, doesn't share libraries, requires a
fast/always-on net connection, or whatever other misconception you've acquired
about Zero Install after reading one paragraph. Thank you.
</p>
</div>

<p class='q'>Show me an example.</p>

<p>
Let's say you're looking for a little desktop reminder application. You
search <a href="http://freshmeat.net">Freshmeat.net</a> and find
<a href="http://rox.sf.net/memo.html">Memo</a>. You open the directory
containing Memo (on the remote machine) with your file manager (note the
title-bar):
</p>

<p style='text-align: center'>
<img width="443" height="199" src="apps.png"
     alt='ROX-Filer window showing Memo application on the remote machine' />
</p>

<p>
Click on Memo to run it, and it will run. Now, Memo depends on ROX-Lib2,
which requires pygtk, which needs python2.2 and GTK+-2, which needs glib,
pango and AKT. But that's OK; Memo runs everything it
needs directly from the remote machines where they're stored:
</p>

<p style='text-align: center'>
<img src='progress.png' width='565' height='235'
     alt='GUI progress indicator' />
</p>

<p>
When you ran Memo, a progress indicator appeared briefly, showing the download
progress. If you quit Memo and run it again, it will start instantly, because
the Zero Install system has cached everything locally.
</p>

<p>
Note that the progress display and downloading are <i>not</i> performed by the
file manager; the filer sees this as an ordinary directory. The Zero Install
system automatically cached the remote resources when they were accessed. You
could have run Memo from a shell prompt, and it would have worked just as well.
</p>

<div class='note' style='text-align: left'><h3>Key points</h3>
<ul>
<li>Software is only ever <i>cached</i>, not <i>installed</i>. Anyone can run
any software, and nothing is run as root.</li>
<li>Running a program is done in the same way whether it's cached or not.</li>
<li>Running cached software is as fast as running traditionally-installed
software.</li>
<li>Zero Install is both simpler and more secure than traditional packaging
systems.</li>
<li>Software can be removed from the cache to free space without affecting
the behaviour of the system (it will be re-cached on demand).</li>
<li>You can still run a program you cached last week, without using the net again.</li>
</ul>
</div>

<p class='q'>What about package management systems like APT?</p>

<p>
These require a central authority to maintain the database. For example, you
can't install Memo using APT, because Debian don't package it. The best an
author can do is provide Debian .deb packages on the site. But then the user
still has to do the manual dependency resolution above for everything not in
Debian's system (some people have suggested setting up additional APT
repositories: I'd consider that adding all the required third-party
repositories to <tt>sources.list</tt> still counts as 'manual').
</p><p>
They are also fragile; if the user deletes managed files then
the system may stop working. However, a user can remove any part of the
Zero Install cache at any time, and it will simply be fetched again if it's
needed later.
</p><p>
Also, a user installing from a .deb, .rpm, etc still has to enter the root
password and run a script as root. This is inconvenient and a security risk.
Zero Install allows users to run software without root privileges.
</p>
<p>
See the <a href="compare.html">comparison with other systems</a> document
for a more detailed list of the advantages of Zero Install.
</p>

<p class='q'>Isn't running stuff off the net a security risk?</p>

<p>Isn't that where you get your software from anyway? Zero Install
automatically performs a number of checks for you (such as checking MD5 sums
and GPG signatures), and since it doesn't run any of the remote code as root,
you can try software out safely as a 'guest' user. Once downloaded, the
programs are run from the cache, without even checking the original sites for
updates (you have to tell it to update manually).
</p>

<p>To be absolutely clear about this: you're running the same code that you
would have run anyway, but you're running it as a user instead of running it as
root. How much of an advantage this is depends on whether you have multiple
users and whether you use any sandboxing. However, it's never <i>less</i>
secure, which is what many people seem to imagine.
</p>

<p>See the <a href="security.html">security model</a> document for more
information about security in Zero Install.</p>

<p class='q'>Can I try it out?</p>

<p>
Although the system makes installing other software very easy, the Zero
Install system itself still requires some work to install. Please read this:
</p>
<ul>
<li> <a href="install.html">Step-by-step installation walk-though</a>.</li>
</ul>

<p class='q'>Is it fully working yet?</p>

<p>Pretty much. The main issue is how much software is distributed using this
method. You can run Memo as shown above, and it will get ROX-Lib and pygtk via
Zero Install. However, the other libraries are not yet in Zero Install, so you
will need to install Gtk, etc, as normal for now.
</p>

<p>
Support for mirrors needs to be improved, so that you can still download new
software even if the original site is down (of course, you can continue to
use software that you've already downloaded without needing net access).
</p>

<p>
Take a look at our <a href="http://sourceforge.net/pm/?group_id=76468">tasks
list</a> for a list of things being worked on (or things that will be worked
on when we get volunteers). We really need lots of volunteers to start packaging
some applications (you can distribute them from your own web pages). See the
<a href="http://rox.sourceforge.net/phpwiki/index.php/ZeroInstallSites">list
of supporting sites</a> to see what we've got already.
</p>

<p class='q'>Do I have to enter the full URI every time I want to run a
program?</p>

<p>No, create a shortcut to it instead. For example, you could drag Memo
from the window above onto a panel or the desktop background, or set it to load
when you log in. You can assign a keyboard shortcut to an application, add it
to the Send To menu, bookmark it, stick it on a `Start' menu, put it in PATH,
make a shell alias or use any other normal method of making something easier to
get to.
</p>

<p class='q'>What about package conflicts?</p>
<p>
When installing RPMs from different sources, they may conflict because they both try to
install different files in the same place. This can't happen in Zero Install, because
of the URI naming scheme (just like visiting one web page won't stop another one from
loading later, even if they have the same title).
</p>

<p class='q'>Slow down... can we go through this step-by-step?</p>

<p>
Sure. It works like this:
</p>

<ol>
<li>Alice opens <tt>/uri/0install/gimp.org</tt> in her filemanager.</li>
<li><tt>gimp.org</tt> isn't in the cache, so Linux asks the Zero Install
daemon process (zero-install) to fetch it.</li>
<li>zero-install downloads the index file from the site
(<tt>http://gimp.org/.0inst-index.tar.bz2</tt> if you must know) and puts the
directory structure it describes in the cache.</li>
<li>Alice explores the site in her filemanager, and eventually clicks on
<tt>gimp.org/Testing/Gimp-1.3</tt>.</li>
<li>Gimp-1.3 isn't in the cache, so Linux asks the zero-install daemon to
fetch it. zero-install downloads it from a mirror site (checking the MD5 sum
against the one in the index to make sure it's genuine) and puts it in the
cache.</li>
<li>Gimp-1.3 runs.</li>
</ol>

<p>Notice that the zero-install daemon didn't run any scripts. It only fetched
and extracted some archives into the cache directory. Gimp hasn't been added
to any other user's Start menu or similar (it might be on Alice's Start menu
now... that's between Alice and the Gimp).</p>

<ol>
<li>A few days later, Bob (another user on the same computer) opens
<tt>/uri/0install/gimp.org</tt> in his filemanager. Since it's in the cache, it
opens instantly.</li>
<li>Bob goes into the <tt>Testing</tt> directory and clicks on
<tt>Gimp-1.3</tt>. Since it's in the cache, it starts right away without using
the network at all.</li>
</ol>

<p class='q'>I dunno... this cache thing sounds complicated...</p>

<p>
It's really simple. When you run <tt>/uri/0install/abiword.org/abiword</tt>, Zero Install
stores a copy of it in <tt>/var/cache/zero-inst/abiword.org/abiword</tt>. The next
time you try to run it, Zero Install sees that it's already got a copy, and runs
that. If you delete the copy in the cache, it will be refetched next time it's needed.
It's really hard to mess up the cache, because if anything is missing it gets refetched.
You could even delete everything inside the cache directory, and it will just repopulate itself
as you access things.
</p>

<p class='q'>I have more questions!</p>

<p>Try <a href="faq.html">the FAQ</a>.</p>

<p>More technical readers might want to read the
<a href="technical.html">technical details</a> page.
</p>

<h3>Articles about Zero Install</h3>

<p>These have moved to the <a href='links.html'>links page</a>.</p>

</html>
