<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml">

<h2>Zero Install: Comparison with other systems</h2>

<p>
This matrix shows some desirable features in a packaging system, and shows which
systems provide them. Obviously, these things tend to be a bit biased (both in
terms of what features are chosen for comparison, and of what is considered to
be a 'pass') but it should give the general idea.
</p>

<table class='matrix'>
 <tr><th>Feature</th>					<th>Source tarball</th>	<th><a href='http://www.debian.org/doc/manuals/apt-howto/index.en.html'>APT</a></th>
 													<th><a href='http://autopackage.org'>Autopackage</a></th>
															<th><a href='http://klik.atekon.de/'>Klik</a></th>
																		<th><a href='http://java.sun.com/products/javawebstart/'>Java WS</a></th>
																					<th><a href="http://www.konvalo.org">Konvalo</a></th>
																								<th>Zero Install<br/><a href='filesystem.html'>Filesystem</a></th>
																										<th>Zero Install<br/><a href='injector.html'>Injector</a></th></tr>

 <tr><th>Users can install software</th>		<yes/>			<no/>			<yes/>		<yes/>			<yes/>			<yes/>			<yes/>			<yes/></tr>
 <tr><th>Dependencies handled automatically</th>	<no/>			<yes/>			<yes/>		<yes/>			<yes/>			<yes/>			<yes/>			<yes/></tr>
 <tr><th>Automatic upgrading</th>			<no/>			<yes/>			<no/>		<yes/>			<yes/>			<yes/>			<yes/>			<yes/></tr>
 <tr><th>Libraries shared between programs</th>		<yes/>			<yes/>			<yes/>		<no/>			<yes/>			<yes/>			<yes/>			<yes/></tr>
 <tr><th>Downloads shared between users</th>		<no/>			<td>No user downloads</td><no/>		<no/>			<no/>			<yes/>			<yes/>			<no>Planned</no></tr>
 <tr><th>Multiple versions coexist</th>			<yes/>			<no/>			<no/>		<yes/>			<no/>			<yes/>			<yes/>			<yes/></tr>
 <tr><th>Uninstall</th>					<td>Sometimes</td>	<yes/>			<yes/>		<yes/>			<yes>(cache)</yes>	<yes>(cache)</yes>	<yes>(cache)</yes>	<yes>(cache)</yes></tr>
 <tr><th>Digital signatures</th>			<no/>			<yes/>			<no/>		<no/>			<td>Only one</td>	<td>In theory</td>	<td>Only upgrades</td>	<yes/></tr>
 <tr><th>Conflict-free</th>				<no/>			<no/>			<no/>		<yes/>			<yes/>			<yes/>			<yes/>			<yes/></tr>
 <tr><th>Decentralised</th>				<yes/>			<no/>			<yes/>		<no/>			<yes/>			<yes/>			<yes/>			<yes/></tr>
 <tr><th>Non-root install of system</th>		<yes/>			<no/>			<yes/>		<no/>			<yes/>			<no/>			<no/>			<yes/></tr>
 <tr><th>All programming languages</th>			<yes/>			<yes/>			<yes/>		<yes/>			<no>Only Java</no>	<yes/>			<yes/>			<yes/></tr>
 <tr><th>Supports sandboxing</th>			<no/>			<no/>			<no/>		<no/>			<yes/>			<yes/>			<yes/>			<no>Planned</no></tr>
 <tr><th>Usable when off-line</th>			<yes/>			<yes/>			<yes/>		<yes/>			<yes/>			<yes/>			<yes/>			<yes/></tr>

</table>

<h3>Explanation of features</h3>

<dl>
 <dt>Users can install software</dt>		
 <dd>A user without root privileges can install software using this system (without unreasonable extra effort).</dd>
 
 <dt>Dependencies handled automatically</dt>	
 <dd>If a program requires some library to function, the system will locate, download and install the library too.</dd>

 <dt>Automatic upgrading</dt>			
 <dd>The system can check for and install upgrades automatically or at the operator's request. User does not have to
 perform a full install operation manually on each package.</dd>
 
 <dt>Libraries shared between programs</dt>
 <dd>If two programs use the same library, the library is only downloaded and stored once. Upgrading a library will
 benefit all programs that use it.</dd>
 
 <dt>Downloads shared between users</dt>		
 <dd>If two users install/use the same program, it is only downloaded once and stored once.<br/>
 Notes: It's quite easy to share downloads from the injector; the administrator takes a copy of the user's download,
 verifies that its name matches its digest (<b>0store verify</b>) and puts it in the shared cache if so. In future,
 a setuid helper will be provided to make this automatic.</dd>
 
 <dt>Multiple versions coexist</dt>
 <dd>Two versions of a program or library can be installed at the same time, and the user can choose which one to run.</dd>

 <dt>Uninstall</dt>
 <dd>Programs can be cleanly removed from the system easily (reversing the effects of the install).</dd>
 
 <dt>Signatures</dt>				
 <dd>Software comes with a digital signature, which is checked automatically by the system.<br/>
 Notes: The Zero Install filesystem remembers the signing key when software is
 first accessed, and checks that it hasn't changed when upgrading. The injector
 prompts the user even on the first access. Java Web-Start requires all
 components to be signed with the same key. Konvalo can use CODA's underlying
 security mechanisms to do this, but the currently available realm doesn't
 support this.</dd>
 
 <dt>Conflict-free</dt>
 <dd>If program A requires an old version of a library, and program B requires a new version, A and B can both be installed and
 used at the same time. The system will never refuse to install one program because some other program is installed.</dd>
 
 <dt>Decentralised</dt>
 <dd>A program packaged for this system can be installed easily, without having to be in some special centralised repository.<br/>
 Notes: Debian allows extra repositories to be added, but this is a manual
 step, requires root access, and is a considerable security risk.</dd>
 
 <dt>Non-root install of system</dt>		
 <dd>The packaging system itself can be easily installed without administrator privileges, and the normal selection of
 software will be available.</dd>

 <dt>All programming languages</dt>			
 <dd>All types of program can be accessed using this system.</dd>

 <dt>Supports sandboxing</dt>
 <dd>If you have a way of running an application in a sandboxed environment (eg, a Java virtual machine), then the
 installation system will let you install and run the program without forcing you to run any of the downloaded
 code outside of the sandbox.<br/>
 Notes: The injector supports this, but you need a little bit of Python code to make it run your sandbox instead of
 running the chosen binary directly. Future versions will provide a command-line option for this.</dd>

 <dt>Usable when off-line</dt>
 <dd>Once a program has been installed, the program can be run again while disconnected.</dd>
</dl>

<h2>See also</h2>

<ul>
<li><a href='http://www.kitenet.net/~joey/pkg-comp/'>Comparing Linux/UNIX Binary Package Formats</a>
(by Joey Hess, author of <a href='http://kitenet.net/programs/alien/'>Alien</a>)</li>
</ul>

</html>
