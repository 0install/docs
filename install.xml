<?xml version='1.0' encoding='utf-8'?>
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">

<h2>Installation</h2>

<p style='text-align: center'>
  <span class='note'>
  <strong>Warning:</strong> This is the <b>old</b> version of Zero Install. You
  probably want to <a href='injector.html'>install the new injector version</a>
  instead!
  </span>
</p>

<p>
Although the system makes installing other software very easy, the Zero
Install system itself still requires some work to install. You'll also
need to have <a href="http://freshmeat.net/depends/download-all/39759/">a few
other things</a> installed first (expat to parse the XML index files, wget to
download archives, tar, bzip2 and gzip to extract them, GPG to check they are
correctly signed, and D-BUS to report progress to graphical utilities). Most
systems will have these installed already, although you may be missing the
header files for expat (expat-dev). Note that, while you need libdbus
installed, you don't need any DBUS daemons running (we only use the library
part).
</p>

<div class='note'>
<h3>Security and stability note</h3>
<p>
This software is still under development and has not yet been carefully
audited. Please do not run it on public machines (eg, in a school) where
malicious users could exploit bugs in it.
Please let me know if you find any problems.
<!--
You could also install it under <a
href="http://user-mode-linux.sf.net">User Mode Linux</a> if you want to test
the kernel module in safety, although there have been no bugs discovered in
the last few versions. -->
</p>
</div>

<h3>Packages</h3>
<p>
If you don't want to build from source, choose your platform from the list
below to get a package tailored for your system...
</p>
<ul>
<li><!-- <a href="http://www-i1.informatik.rwth-aachen.de/~joachimk/debian/">Debian packages</a> (see also <a href="http://thread.gmane.org/gmane.comp.file-systems.zero-install.devel/500">this correction</a>-->
For Debian see, the <a href="http://rox.sourceforge.net/phpwiki/index.php/DebianLinux">ROX-provided instructions</a> and
this <a href="http://www.ilrt.bris.ac.uk/discovery/chatlogs/rdfig/2004-08-31.html#T03-40-42">chat session</a> for help.</li>
<li><a href="http://rox.sourceforge.net/phpwiki/index.php/FedoraCore">Fedora Core instructions</a> (from the ROX project; the first half is about getting Zero Install)</li>
<li><a href="http://www.vectorlinux.com/forum/viewtopic.php?t=1380">Vector Linux package</a></li>
<li><a href="http://lists.ibiblio.org/pipermail/sm-grimoire/2003-December/003306.html">SourceMage GNU Linux spell</a></li>
<li><a href="http://www.gobolinux.org/recipe-store/">Gobo Linux recipe</a></li>
<li><a href="http://bugs.gentoo.org/show_bug.cgi?id=35768">Gentoo ebuild</a></li>
<li>Mandrake RPMs: <a href="http://thread.gmane.org/gmane.comp.file-systems.zero-install.devel/546">Mandrake 9.2 RPMs</a> |
<a href="ftp://ftp.ciril.fr/pub/linux/mandrakelinux/devel/cooker/cooker/media/contrib/">Cooker RPM</a> | <a href="http://www.mandrakelinux.com/en/cookerdevel.php3">Cooker Mirrors List</a> | <a href="http://www.mandrakeclub.com/modules.php?op=modload&amp;name=RPM&amp;func=info_page&amp;RID=1825">Mandrake club request</a></li>
<li><a href="http://www.linuxfromscratch.org/hints/downloads/files/0install4lfs.txt">Linux From Scratch</a></li>
<li><a href="http://sourceforge.net/project/showfiles.php?group_id=76468">SourceForge file releases page</a></li>
</ul>

<p>Distributions that have Zero Install running by default:</p>

<ul>
 <li><a href="http://b00t.webstep.net/">b00t Linux</a> (minimal system running Zero Install by default)</li>
</ul>

<div class='note'>Don't want to install a kernel module? You might like to try <a href='injector.html'>the
Zero Install Injector</a>. This project achieves similar goals to the filesystem implementation below,
but is written in pure Python and doesn't even need root access to install.
</div>

<h2>Building from source</h2>

<p>The Zero Install system requires a small Linux kernel module to provide
the <tt>/uri/0install</tt> directory. Like all kernel modules, you must
compile this using the actual kernel headers for the kernel you're actually
running.
</p>

<p>
One way to ensure this is to have compiled your own kernel
(eg, from <a href="http://kernel.org">kernel.org</a>) and be running that.
There are plenty of guides on the net if you don't feel confident about
compiling your own kernel. For example,
<a href="http://www.osnews.com/story.php?news_id=2949">The Very Verbose Guide
to Updating and Compiling Your Debian Kernel</a> (which isn't very Debian
specific, despite the name) and
<a href="http://www.osnews.com/story.php?news_id=443">Compiling the Linux
Kernel</a>. When you install a kernel yourself, the headers get installed
automatically at the same time.
</p>

<p>
If you're using a kernel provided with your distribution, you
should find there is a package with the matching kernel headers supplied
with the distribution, which you can install now. Use the <strong>uname -a</strong>
command to find out which kernel version you are using. For example, on a
Debian system, you could check the version and install the headers like
this (things you type are shown in bold):
</p>

<pre>
# <b>uname -a</b>
Linux everest 2.4.25 #1 [...] i386 GNU/Linux
# <b>apt-get install kernel-headers-2.4.25-1-386</b>
</pre>

<p>
Supported kernels are:
</p>
<ul>
<li> Linux 2.4 series</li>
<li> Linux 2.6 series</li>
</ul>
<p>
If you want to port the (small) module to other kernels (BSD, MacOS
X, etc) please get in touch.
</p>

<p>
We want to make the installation as easy as possible, so if you get stuck,
please <a href="support.html">write to us</a> or
<a href="http://sourceforge.net/tracker/?group_id=76468&amp;atid=547191">file
a bug report</a>.
</p>

<h3>Installing the LazyFS kernel module</h3>

Download the kernel module for your operating system:

<ul>
<li><a href="http://prdownloads.sourceforge.net/zero-install/lazyfs-linux-0.1.26.tgz.gpg?download">lazyfs-linux-0.1.26.tgz.gpg</a> (Linux 2.4 and 2.6 series kernels)</li>
</ul>

<p>
Check the GPG signature, unpack the archive, and move to the new directory
(things you type are shown in bold):
</p>

<pre>
$ <b>gpg lazyfs-linux-0.1.26.tgz.gpg</b>
gpg: Signature made Mon 03 Jan 2005 15:01:28 GMT using DSA key ID 59A53CC1
gpg: Can't check signature: public key not found
$ <b>tar xzf lazyfs-linux-0.1.26.tgz</b>
$ <b>cd lazyfs-linux-0.1.26</b>
</pre>

<p>If you have my GPG key (see page header) in your keyring, the first step
will tell you whether the archive is correctly signed. If not, you'll get the
message shown above, but you can still continue anyway. The reason for using
GPG here is partly to increase security, and partly to make sure you've got
GPG installed (you'll need it later!).
</p>

<p>
Now, configure, make and install (use su to get root privileges):
</p>

<pre>
$ <b>./configure</b>
$ <b>make</b>
$ <b>su -c 'make install'</b>
*** Testing kernel module ***
</pre>

<ul>
<li><a href="http://thread.gmane.org/gmane.comp.file-systems.zero-install.devel/349">The file ~/.../include/linux/version.h does not exist</a></li>
<li><a href="http://thread.gmane.org/gmane.comp.file-systems.zero-install.devel/367">QM_MODULES: Function not implemented</a></li>
<li><a href="http://article.gmane.org/gmane.comp.file-systems.zero-install.devel/374">dmesg: version magic...</a> (Debian custom kernel)</li>
</ul>

<p>
If you've got Python and sudo installed, now would be a good time to run the
unit-tests. This is optional, but it makes it easier for us to diagnose bugs if
they're detected here (save your work first!):
</p>

<pre>
$ <b>python tests/check.py</b>
lazyfs0d1d23: Device or resource busy
test1CacheLink (__main__.Test1WithoutHelper) ... ok
test2UnconnectedEmpty (__main__.Test1WithoutHelper) ... ok
test01Nothing (__main__.Test2WithHelper) ... ok
test02ReleaseHelper (__main__.Test2WithHelper) ... ok
[...]
test19BadRead (__main__.Test2WithHelper) ... ok
test20FMapping (__main__.Test2WithHelper) ... ok
test21Fstat (__main__.Test2WithHelper) ... ok

----------------------------------------------------------------------
Ran 23 tests in 3.424s

OK
</pre>

<ul>
  <li><a href="http://thread.gmane.org/gmane.comp.file-systems.zero-install.devel/641">sudo: command not found</a></li>
  <li><a href="http://thread.gmane.org/gmane.comp.file-systems.zero-install.devel/857">AssertionError: 'Linux-ix86' != 'Linux-ppc'</a> -- edit tests/check.py for non-x86 systems</li>
</ul>

<p>
If any of the tests fail or (even more exciting!) your system hangs, please
<a href="support.html">report it</a>! Reliable crashes in the unit tests
should be easy to track down and fix. Note that if your kernel crashes, it
might be better to run the tests from a text console. You're more likely
to get diagnostics printed there than from within X.
</p>

<h3>Installing Zero Install</h3>

<p>Once you've got LazyFS installed (see above), you can install Zero
Install. Download latest version:</p>

<ul>
<li><a href="http://prdownloads.sourceforge.net/zero-install/zero-install-0.1.27.tar.gz.gpg?download">zero-install-0.1.27.tgz.gpg</a></li> 
</ul>

<p>
Check the GPG signature and unpack as before:
</p>

<pre>
$ <b>gpg zero-install-0.1.27.tar.gz.gpg</b>
$ <b>tar xzf zero-install-0.1.27.tar.gz</b>
$ <b>cd zero-install-0.1.27</b>
</pre>

<p>
For <a href="http://sourceforge.net/mailarchive/message.php?msg_id=6386789">security reasons</a>,
zero-install does not run as root. So you'll now need to create a new user for
it (eg, using the <b>adduser</b> command, or with a tool such as SuSE's YaST).
Run configure with the name of your chosen user (here called 'zeroinst'):
</p>

<pre>
$ <b>./configure --with-user=zeroinst</b>
$ <b>make</b>
$ <b>su -c 'make install'</b>
</pre>

<ul>
<li><a href="http://thread.gmane.org/gmane.comp.file-systems.zero-install.devel/521">undefined reference to `dbus_error_init'</a></li>
<li>Can't find D-BUS? Try setting PKG_CONFIG_PATH=/usr/lib/pkgconfig:/usr/local/lib/pkgconfig</li>
</ul>

<p>
This will create the <tt>/uri/0install</tt> mount point and the
<tt>/var/cache/zero-inst</tt> cache directory. It will also add an entry to
<tt>/etc/fstab</tt> to allow mounting <tt>/uri/0install</tt> easily. If you
were already running an older version, this step also unmounts
<tt>/uri/0install</tt>.
</p>

<p>
Now, run zero install (it will just wait, without doing anything).
You can look at <tt>/var/log/daemon.log</tt> (or whatever your system uses)
to see what it's doing. SuSE uses <tt>/var/log/messages</tt> instead.
</p>

<pre>
$ <b>su -c '/etc/init.d/0install start'</b>
Starting zero-install...
(mounting /uri/0install)
zero-install: libdbus 0.20 or 0.21 detected.
$ <b>tail /var/log/daemon.log</b>
Aug 22 15:35:55 everest zero-install: Started: using cache directory '/var/cache/zero-inst'
Aug 22 15:35:55 everest zero-install: Network errors are logged to
                                      '/var/cache/zero-inst/.0inst-wget.log'
Aug 22 15:35:55 everest zero-install: libdbus 0.20 or 0.21 detected.
</pre>

<ul>
<li><a href="http://thread.gmane.org/gmane.comp.file-systems.zero-install.devel/73">mount: wrong fs type...</a> (run 'dmesg' for hints)</li>
<li><a href="http://thread.gmane.org/gmane.comp.file-systems.zero-install.devel/332">error while loading shared libraries: libdbus-1.so.0</a></li>
<li><a href="http://thread.gmane.org/gmane.comp.file-systems.zero-install.devel/457">lazyfs kernel module not loaded automatically</a></li>
</ul>

<p>
As with lazyfs, users with python and sudo may run the unit-tests now. As the tests check that the
digital signature stuff works, you'll be prompted to
<a href="http://thread.gmane.org/gmane.comp.file-systems.zero-install.devel/670">create a GPG key
for a test site</a>.
</p>

<pre>
$ <b>python tests/0test.py</b>
Logging to logfile 'log'
test01Nothing (__main__.TestSimple) ... ok
test02Fail (__main__.TestSimple) ... ok
test03EmptySite (__main__.TestSimple) ... ok
test04ReadFile (__main__.TestSimple) ... ok
test05InvalidSites (__main__.TestSimple) ... ok
test06ValidSites (__main__.TestSimple) ... ok

----------------------------------------------------------------------
Ran 6 tests in 3.362s

OK
</pre>

<h2>Testing the installation</h2>

<p>
With zero install still running, try the following command:
</p>

<pre>
$ <b>cat /uri/0install/zero-install.sourceforge.net/demo/test.txt</b>
It worked!
</pre>

<ul>
<li><a href="http://thread.gmane.org/gmane.comp.file-systems.zero-install.devel/331">got_site_index_archive: Failed to fetch index archive in log file</a></li>
<li><a href="http://thread.gmane.org/gmane.comp.file-systems.zero-install.devel/375">Input/output error: Failed to extract GPG signature/keyring/mirrors!</a> (with old version of tar)</li>
<li>I/O error and nothing in the log (try 'chsh zeroinst' if the shell in
/etc/passwd is /bin/false; use /bin/sh)</li>
<li><a href="http://thread.gmane.org/gmane.comp.file-systems.zero-install.devel/438">Using a web-proxy with http_proxy</a></li>
<li><a href="http://thread.gmane.org/gmane.comp.file-systems.zero-install.devel/452">Multi-processor SMP machines</a></li>
<li><a href="http://thread.gmane.org/gmane.comp.file-systems.zero-install.devel/469">zero-install: handle_root_request: Unable to write ...</a>
(check permissions and don't use libtrash)</li>
</ul>

<p>
Users can see what they are currently downloading with the ZeroProgress
utility, itself available via Zero Install:
</p>

<pre>
$ <b>/uri/0install/zero-install.sourceforge.net/apps/ZeroProgress/AppRun &amp;</b>
Starting ZeroProgress...
Ready and waiting...
</pre>

<div class='note'>
Note that ZeroProgress requires the dbus-glib library, which is supplied as
part of libdbus. If you're using Debian packages, you need to install the
<tt>dbus-glib-1</tt> package.
</div>

<p>
No windows appear on the screen when you run this, but any further downloads
will display a progress box. Note that the GTK library is not yet in
Zero Install, so you need to have that installed by traditional methods. In the same
apps directory as ZeroProgress, you will also find 'ShowLog', which will display Zero
Install's download log in case you get any errors.
</p>

<p>
You can open the <a href="http://rox.sourceforge.net/phpwiki/index.php/ROX-Filer">ROX-Filer</a>
window shown on the main page using these commands (which also fetch the
filer itself through Zero Install):
</p>

<pre>
$ <b>alias rox=/uri/0install/rox.sourceforge.net/rox</b>
$ <b>rox /uri/0install/rox.sourceforge.net/apps</b>
</pre>

<ul>
<li><a href="http://thread.gmane.org/gmane.comp.file-systems.zero-install.devel/351">relocation error running rox</a></li>
</ul>

<p>
This window will then appear (see the <a
href="http://rox.sourceforge.net/phpwiki/index.php/ZeroInstall">ROX Wiki
page</a> for more details):
</p>

<p style='text-align: center'>
<img width="443" height="199" src="apps.png" alt="The apps directory"/>
</p>

<p>
Links to other sites with more software, including Mozilla, Python, Acrobat
reader, pkg-config, GTK, Java and NEdit, can be found in the directory
<tt>/uri/0install/zero-install.sourceforge.net/links</tt>, and on the
wiki page
<a href="http://rox.sourceforge.net/phpwiki/index.php/ZeroInstallSites">Zero Install Sites</a>.
</p>

<h3>Notes</h3>
<ul>
<li>I/O errors indicate that zero install failed to fetch the requested file.
ZeroProgress should pop up a box with an explanation, if it's running. Otherwise,
check the log file (as shown above).</li>
<li>When you reboot, <tt>/uri/0install</tt> is automatically mounted, but the
zero-install helper program is <strong>not</strong> run automatically.
Therefore, you will get I/O errors when trying to access anything new, until
you do <tt>/etc/init.d/0install start</tt>.
</li>
<li><a href="http://thread.gmane.org/gmane.comp.file-systems.zero-install.devel/535">Starting Zero Install automatically at boot time</a></li>
</ul>

<h2>Further reading</h2>

<p>Please see <a href="docs.html">the documentation</a> for more information.</p>

</html>
