<?xml version='1.0' encoding='utf-8'?>
<html>

<h2>Goals</h2>

<p>
Let's expand a little on the goals set out on the <a href='/'>title page</a>:
</p>

<table class='picturebullets'>
 <tr id='anyonedistrib'>
  <td class='image'><img src='tango/applications-internet.png' alt='' width='48' height='48'/></td>
  <td><h3>Anyone can distribute software</h3>
    <p>
      The traditional Linux distribution system, using centralised repositories, creates
      an interesting chicken-and-egg situation: distributions won't package software until
      it becomes popular, but software won't become popular until it's easy to install.
    </p>
    <p>
      You don't need to be blessed by a distribution (or anyone else)
      to be part of 0install; all you need is a web page.
    </p>
    <p>
      It's easier too: you can make a single archive can work on all platforms
      (for platform-independent applications such as Python or Java programs,
      at least).
    </p>

 <p>
   See the "<a href='http://osnews.com/story.php/16956/Decentralised-Installation-Systems'>Decentralised
   Installation Systems</a>" essay on OSNews for a more complete introduction to the subject.
 </p>

 <p>
  See the <a href='dev.html'>developer documentation</a> for information on
  distributing software using 0install.
 </p>
 
  </td>
 </tr>
 <tr id='anyoneinstall'>
  <td class='image'><img src='tango/secure.png' alt='' width='48' height='48'/></td>
  <td><h3>Security is central</h3>
    <p>
      Security is sometimes seen as the enemy of usability, but we see it as the foundation
      of a usable system. Good security doesn't just mean not having your data destroyed
      by viruses - it means freedom to experiment with new software.
    </p>
    <p>
      The problems with a centrally-controlled "app store" as the only means to
      get software are clear to everyone: applications that compete with the
      store owner's interests are banned. Innovation and competition suffer.
      But the same effect can be acheived without overt restrictions if getting
      software from outside the distribution repository is simply too risky for
      users to consider.
    </p>
    <p>
      See the <a href='injector-security.html'>security page</a> for more information about 0install's security features.
    </p>
  </td>
</tr>
 <tr id='control'>
  <td class='image'><img src='tango/Emblem-person-blue.png' alt='' width='48' height='48'/></td>
  <td><h3>You control your own computer</h3>
      <p>
	When you install a package with a traditional installer, you have no way of
	knowing what it will do. Will it add itself to a menu somewhere? Start a service
	whenever you turn on the computer? Stop another program from working?
      </p>
      <p>
	0install merely <i>caches</i> programs, each version of each package in its own
	directory. Changes to the environment, such as adding a menu entry, only happen
	in response to a deliberate action on your part.
      </p>
      <p>
	Because programs don't conflict, you're free to try the very latest development
	version of a program (along with all the bleeding-edge libraries it needs) without
	destabilising the rest of your system. If two programs want the same version of
	a library, they'll share it. Otherwise, they'll use separate copies. And you can
	always revert back to an older version... or run old and new versions of the same
	program side-by-side!
      </p>
    </td>
  </tr>
 <tr id='updates'>
  <td class='image'><img src='tango/update.png' alt='' width='48' height='46'/></td>
  <td><h3>Automatic updates</h3>

    <p>When you run a program and it has been a month since the last check, 0install will quietly
      check for updates in the background. If any are available, you will be notified.</p>

    <p>The frequency of these checks is configurable, and you can choose not to use the latest version
      if you prefer.</p>
  </td>
 </tr>
 <tr id='cache'>
  <td class='image'><img src='tango/system-software-update.png' alt='' width='48' height='48'/></td>
  <td><h3>It doesn't matter whether software is installed or not</h3>

 <p>Traditional systems make running software a two-step process: first you
 install it, then you run it.  In a 0install system, you just run it and
 the system handles the rest (downloading and caching as needed). You can delete
 the downloaded programs later to save space, and they will be fetched again
 automatically if they are needed in the future.</p>
 <p>The <a href='howitworks.html'>screenshots page</a> has an example showing how
 software is run this way.</p>
  </td>
 </tr>
 <tr id='safesharing'>
  <td class='image'><img src='tango/share.png' alt='' width='48' height='31'/></td>
  <td><h3>Shared downloads</h3>
 <p>If one user installs a 200 Mb application, another user can run it without downloading it again.
 Most packaging systems solve this problem by only allowing root to install software. The systems which
 don't have this limitation typically end up downloading
 and storing multiple copies of a program; one for each user. 0install
 shares downloads (safely) between users.
 </p>
 <p>
  With 0install, each user downloads a small <i>feed file</i> which gives the cryptographic
  digest of the full package. The digest can be used to check that a package already on the computer
  (downloaded by another user) hasn't been tampered with. Most simply, each user can make a copy of the
  original download this way (which shares the download but not the disk space). With a special helper,
  even the disk copies can be safely shared.
 </p>
 <p>
   See the <a href='sharing.html'>Sharing</a> page for information about using this feature.
  </p>
  </td>
 </tr>
</table>


</html>
