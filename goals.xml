<?xml version='1.0' encoding='utf-8'?>
<html xmlns='http://www.w3.org/1999/xhtml'>

<h2>Goals</h2>

<p>
Let's expand a little on the goals set out on the <a href='index.html'>title page</a>:
</p>

<table class='picturebullets'>
 <tr id='anyoneinstall'>
  <td class='image'><img src='tango/package-x-generic.png' alt='' width='48' height='48'/></td>
  <td><h3>Anyone can install software</h3>
<div class='figure' style='float: right'>
  <img width="610" height="331" src="debian-help.png"
     alt="A Debian user asks for help" />
  <p>A Debian user tries to read the OpenOffice documentation.<br/>
  Zero Install would have offered to download it instead.</p>
</div>

 <p>
 You don't have to be root just to install a word-processor, or its
 documentation. Most packaging systems only allow the root user to install
 software.
 </p>
 
 <p>
 Traditionally, if a user needs a package that isn't installed, they just get an
 error message. In the screenshot, the system administrator must install the
 openoffice.org-help package before the user can read the documentation, or
 the user must install from source and handle any dependencies themselves.
 On a Zero Install system, Zero Install would have offered to download the
 documentation when the user selected <b>Help</b>.
 </p>

 <p>
 Of course, Debian could fix this particular problem by making the OpenOffice package
 depend on the documentation package. But then, installing OpenOffice would require far
 more disk space if you didn't need the documentation (and most of the time, for most
 versions of most software packages, you <i>don't</i> need the documentation... but an
 administrator can't know ahead of time what will be needed by their users). Also, users
 still wouldn't be able to install OpenOffice itself in the first place.
 </p>
  </td>
 </tr>
 <tr id='anyonedistrib'>
  <td class='image'><img src='tango/applications-internet.png' alt='' width='48' height='48'/></td>
  <td><h3>Anyone can distribute software</h3>
 <p>
 One of the more frustrating aspects of open source software is finding a
 program you want, only to discover that there is no package available for your
 distribution. Eg, on Debian (I'm not picking on Debian, it's just I've got a
 Debian system here!):
 </p>

<pre># apt-get install rox-session
E: Couldn't find package rox-session</pre>
 
 <p>
 You don't need to be blessed by a distribution (or anyone else)
 to be part of Zero Install; all you need is a web page. Software is named
 by URI:
 </p>

 <pre>$ 0launch http://rox.sourceforge.net/2005/interfaces/ROX-Session</pre>

 <p>
   See the "<a href='http://osnews.com/story.php/16956/Decentralised-Installation-Systems'>Decentralised
   Installation Systems</a>" essay on OSNews for a more complete introduction to the subject.
 </p>

 <p>
  See the <a href='dev.html'>developer documentation</a> for information on
  distributing software using Zero Install.
 </p>
 
  </td>
 </tr>
 <tr id='updates'>
  <td class='image'><img src='tango/update.png' alt='' width='48' height='46'/></td>
  <td><h3>Automatic updates</h3>

    <p>When you run a program and it has been a month since the last check, Zero Install will quietly
      check for updates in the background. If any are available, you will be notified.</p>

    <p>The frequency of these checks is configurable, and you can choose not to use the latest version
      if you prefer.</p>
  </td>
 </tr>
 <tr id='cache'>
  <td class='image'><img src='tango/system-software-update.png' alt='' width='48' height='48'/></td>
  <td><h3>It doesn't matter whether software is installed or not</h3>

 <p>Traditional systems make running software a two-step process: first you
 install it, then you run it.  In a Zero Install system, you just run it and
 the system handles the rest (downloading and caching as needed). You can delete
 the downloaded programs later to save space, and they will be fetched again
 automatically if they are needed in the future.</p>
 <p>The <a href='howitworks.html'>screenshots page</a> has an example showing how
 software is run this way.</p>
  </td>
 </tr>
 <tr id='safesharing'>
  <td class='image'><img src='tango/share.png' alt='' width='48' height='31'/></td>
  <td><h3>Shared downloads</h3>
 <p>If one user installs a 20 Mb application, another user can run it without downloading it again.
 Most packaging systems solve this problem by only allowing root to install software. The systems which
 don't have this limitation (eg, <a href='http://autopackage.org'>autopackage</a>) typically end up downloading
 and storing multiple copies of a program; one for each user. Zero Install
 shares downloads (safely) between users.
 </p>
 <p>
  With Zero Install, each user downloads a small <i>feed file</i> which gives the cryptographic
  digest of the full package. The digest can be used to check that a package already on the computer
  (downloaded by another user) hasn't been tampered with. Most simply, each user can make a copy of the
  original download this way (which shares the download but not the disk space). With a special helper,
  even the disk copies can be safely shared.
 </p>
 <p>
   See the <a href='sharing.html'>Sharing</a> page for information about using this feature.
  </p>
  </td>
 </tr>
 <tr>
  <td class='image'><img src='tango/secure.png' alt='' width='39' height='48'/></td>
  <td><h3>Good security</h3>
  <p>If one user downloads a malicious program, other users aren't affected.<br/>
  Installation does not execute any of the downloaded code.<br/>
  Digital signatures are always checked before software is run.</p>
  <p>
   See the <a href='injector-security.html'>Injector security</a> page for more information about Zero Install's
   security features.
  </p>
  </td>
 </tr>
</table>


</html>
