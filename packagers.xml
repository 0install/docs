<?xml version='1.0' encoding='utf-8'?>
<html>

<h2>Packagers</h2>

<p>
 This section is for people distributing software using Zero Install.
</p>

<dl>
 <dt><a href='injector-packagers.html'>Packaging guide</a></dt>
 <dd>
  This guide takes you through the steps involved in making a package available
  through Zero Install. You will need to be able to upload (static) files to a
  web-server.
 </dd>

 <dt><a href='templates.html'>Templates</a></dt>
 <dd>
   Sample code packages which you can use as templates when creating a new program that will be distributed using 0install, or as examples for your own programs.
 </dd>

 <dt><a href='tools.html'>Tools</a></dt>
 <dd>
   There are many tools available to make packaging easier.
 </dd>

</dl>

<h3>Off-site documentation</h3>

<dl>
 <dt><a href='http://rox.sourceforge.net/desktop/node/300'>Compiling with SCons and GTK</a></dt>
 <dd>
  <p>Article showing how to use Zero Install in your build scripts to download the SCons build system and
  use it to compile your program.</p>
 </dd>

 <dt><a href='http://rox.sourceforge.net/desktop/node/289'>Easy GTK binary compatibility</a></dt>

 <dd>
  <p>This blog article shows how to use Zero Install to compile your program against older
 versions of library headers than are the default on your system. Binaries created this way
 work on a wider range of systems (all systems with a GTK version newer than the headers). Also,
 since they download the required headers automatically, users don't need to have the headers
 already on their system in order to compile your program.</p>
 <p>
 The binaries produced this way do not depend on Zero Install, so you can use Zero Install as
 part of your build process even if you don't distribute the resulting binaries that way.
 </p>
 </dd>
</dl>

</html>
